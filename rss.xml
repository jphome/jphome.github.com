<?xml version="1.0"?>
<rss version="2.0">  <channel>
    <title>小蒋</title>
    <link>http://jphome.github.com</link>
    <pubDate>06 Sep 14 00:20 CST</pubDate>
    <item>
      <title>NOTE&amp;TODO</title>
      <link>http://jphome.github.com/blog/2014/09/06/note_todo.html</link>
      <pubDate>2014-09-06 12:18:23 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;记录 note &amp;amp; todo&#xA;&lt;br/&gt;&#xA;方便随处查看，捡拾碎片时间&#xA;&lt;br/&gt;&#xA;&lt;b&gt;我tm发现哪里来的碎片时间，每天做不完的事情&amp;hellip;&lt;/b&gt;&lt;/p&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;NOTE&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;可以使用bootstrap+ajax+(shell+awk+sed+cut+uci&amp;hellip;)实现与用户交互&lt;/li&gt;&#xA;&lt;li&gt;话说这ukulele买了有俩月了&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;流控 tc openfree&lt;/li&gt;&#xA;&lt;li&gt;广告推送 wifidog&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;TODO&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过luci深入学习脚本，总结到github，方便查阅&lt;/li&gt;&#xA;&lt;li&gt;学习patch处理方式&lt;/li&gt;&#xA;&lt;li&gt;封装常用工具api&lt;/li&gt;&#xA;&lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://github.com/jphome/WRT_package/tree/master/luci-app-hik-sniffer&#34;&gt;尽快完成hiksniffer&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;del&gt;给老娘买双鞋 37-38码，待确认&lt;/del&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;del&gt;&lt;a href=&#34;/assets/media/img/night_food.png&#34;&gt;需要深入研究下怎么增长体重&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;TO READ&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.clz.me/&#34;&gt;clz关于router的blog&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>WRTnode相关链接</title>
      <link>http://jphome.github.com/blog/2014/08/27/wrtnode_refs.html</link>
      <pubDate>2014-08-27 09:48:00 +0800</pubDate>
      <description>&lt;h3&gt;WRTnode相关文档链接&lt;/h3&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://cn.wrtnode.com/w/?p=355&#34;&gt;WRTnode刷机(2种刷机方式web&amp;amp;mtd)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://cn.wrtnode.com/w/?p=342&#34;&gt;TTL+TFTP救砖&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.wrtnode.com/index.php?title=Starting/zh-cn&#34;&gt;开箱指南&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.wrtnode.com/index.php?title=WRTnode_add_i2c_support/zh-cn&#34;&gt;WRTnode添加i2c支持&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.wrtnode.com/index.php?title=WRTnode_add_spi_slave/zh-cn&#34;&gt;WRTnode添加spi从设备&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.wrtnode.com/index.php?title=Compiling_WRTnode_Firmware/zh-cn&#34;&gt;WRTnode固件编译&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.wrtnode.com/index.php?title=Release_UART/zh-cn&#34;&gt;UART tty控制台-&amp;gt;串口&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>OpenWrt版本&amp;代码路径</title>
      <link>http://jphome.github.com/blog/2014/08/18/openwrt_version.html</link>
      <pubDate>2014-08-18 11:12:02 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;OpenWrt版本分开发主干 + 稳定版&lt;/p&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;OpenWrt版本路线图&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;br/&gt;&#xA;&lt;img src=&#34;/assets/media/img/openwrt_version.png&#34; alt=&#34;OpenWrt版本路线图&#34; title=&#34;OpenWrt版本路线图&#34; /&gt;&#xA;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;各大版本源码&lt;/h3&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;h4&gt;主干开发分支trunk&lt;/h4&gt;&#xA;&#xA;&lt;h5&gt;Barrier Breaker&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;git clone git://git.openwrt.org/openwrt.git&#xA;svn co svn://svn.openwrt.org/openwrt/trunk/&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;稳定分支branches&lt;/h4&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;h5&gt;Kamikaze 7.09&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;svn co svn://svn.openwrt.org/openwrt/tags/kamikaze_7.09&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;Kamikaze 8.09&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;svn co svn://svn.openwrt.org/openwrt/branches/8.09&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;Backfire 10.03&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;svn co svn://svn.openwrt.org/openwrt/branches/Backfire&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;Attitude Adjustment 12.09&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;svn co svn://svn.openwrt.org/openwrt/branches/attitude_adjustment&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;Refs&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/double-win/p/3838112.html&#34;&gt;http://www.cnblogs.com/double-win/p/3838112.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://wiki.openwrt.org/about/history&#34;&gt;http://wiki.openwrt.org/about/history&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://dev.openwrt.org/wiki/GetSource&#34;&gt;https://dev.openwrt.org/wiki/GetSource&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>LuCI编程</title>
      <link>http://jphome.github.com/blog/2014/08/17/luci_api.html</link>
      <pubDate>2014-08-17 07:33:09 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;LuCI API&#xA;&lt;br/&gt;&#xA;LuCI template&#xA;&lt;br/&gt;&#xA;uci usage&lt;/p&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;LuCI template&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;内部常量&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;REQUEST_URL         当前URL_&#xA;controller          主分发路径&#xA;resource            资源目录路径&#xA;media               主题目录路径&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;pre&gt;&#xA;&lt;%+template%&gt; or &lt;%include(template)%&gt;              ###&lt; 引用外部模板&#xA;    &lt;%+header%&gt;                                     ###&lt; /usr/lib/lua/luci/view/header.htm&#xA;&lt;%=value%&gt; or &lt;%write(value)%&gt;                      ###&lt; 插入变量值&#xA;&lt;%:xxx Page%&gt; or &lt;%=translate(&#34;xxx Page&#34;)%&gt;         ###&lt; 翻译&#xA;&#xA;&lt;%code%&gt;                                            ###&lt; 插入lua代码&#xA;&lt;%- xxx -%&gt;                                         ###&lt; 分行代码&#xA;&#xA;&lt;%#comment%&gt;                                        ###&lt; 注释&#xA;&lt;%# xxx -%&gt;                                         ###&lt; 分行注释&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;LuCI API&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://luci.subsignal.org/api/luci/index.html&#34;&gt;http://luci.subsignal.org/api/luci/index.html&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;uci usage&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;uci在读取的时候优先显示内存中的缓存，其次显示文件中的，其操作方式类似sqlite&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;### uci命令&#xA;config xx1 xx2&#xA;    option xx3 xx4&#xA;&#xA;xx2    section&#xA;xx1    section type&#xA;xx3    option名&#xA;xx4    option值&#xA;&#xA;$ touch demo&#xA;$ uci add demo stype            ###&lt; 添加一个匿名的section&#xA;=&gt; config stype&#xA;$ uci set demo.sec=stype        ###&lt; 添加一个stype类型的section&#xA;=&gt; config stype &#39;sec&#39;&#xA;$ uci set demo.sec.opt=val      ###&lt; 添加一个option&#xA;=&gt; config stype &#39;sec&#39;&#xA;        option opt &#39;val&#39;&#xA;$ uci add_list demo.sec.l=11    ###&lt; 添加一个list&#xA;=&gt; config stype &#39;sec&#39;&#xA;        list l &#39;11&#39;&#xA;$ uci delete demo.sec.l         ###&lt; 删除一个list&#xA;$ uci delete demo.sec.opt       ###&lt; 删除一个option&#xA;$ uci delete demo.sec           ###&lt; 删除一个section&#xA;$ uci delete demo.@stype[0]     ###&lt; 删除section type为stype的地一个匿名section&#xA;&#xA;### 导出配置&#xA;uci export &gt; config_total                   ###&lt; 导出所有配置&#xA;uci export netowrk &gt; config_network         ###&lt; 只导出/etc/config/network&#xA;&#xA;### 设置lan ip&#xA;uci set network.lan.ipaddr=192.168.2.1&#xA;&#xA;### 设置wan口pppoe拨号&#xA;uci set network.wan.proto=pppoe&#xA;uci set network.wan.username=xxx&#xA;uci set network.wan.password=xxx&#xA;&#xA;### 设置为二级路由&#xA;uci set network.wan.proto=none              ###&lt; 关掉wan&#xA;uci set network.lan.gateway=[一级路由ip]    ###&lt; 网关指向一级路由&#xA;uci set network.lan.dns=[一级路由ip]        ###&lt; dns指向一级路由&#xA;uci set dhcp.lan.ignore=1                   ###&lt; 关掉lan的dhcp&#xA;&#xA;### 无线设置&#xA;uci set wireless.@wifi-device[0].disable=0          ###&lt; 打开无线&#xA;uci set wireless.@wifi-device[0].txpower=17         ###&lt; 设置功率为17dbm,太高会烧坏无线模块&#xA;uci set wireless.@wifi-device[0].channel=6          ###&lt; 设置无线信道为6&#xA;uci set wireless.@wifi-device[0].mode=ap            ###&lt; 设置无线为ap模式&#xA;uci set wireless.@wifi-device[0].ssid=SSID&#xA;uci set wireless.@wifi-device[0].network=lan        ###&lt; 无线链接到lan上&#xA;uci set wireless.@wifi-device[0].encryption=psk2    ###&lt; 设置加密为WPA2-PSK&#xA;uci set wireless.@wifi-device[0].key=xxx            ###&lt; 设置无线密码&#xA;&#xA;### 应用配置&#xA;uci changes [config]                ###&lt; 显示未保存修改(commit前)&#xA;uci commit [config]                 ###&lt; 有点儿sqlite的味道&#xA;/etc/init.d/network restart         ###&lt; 重启网络服务&#xA;&#xA;### 该如何用uci配置某一个应用的某一个参数呢&#xA;先找到相关配置文件，比如说/etc/config/demo&#xA;$ cat /etc/config/demo&#xA;config login&#xA;    option username &#39;xxx&#39;&#xA;    option password &#39;xxx&#39;&#xA;    option ifname &#39;eth0&#39;&#xA;    option domainname &#39;jphome.github.com&#39;&#xA;&#xA;config demo_list&#xA;    option ip_list &#39;192.168.1.1&#39;&#xA;&#xA;$ uci -c /et/config show demo         ###&lt; 显示配置文件demo的每一项的规则(名字)&#xA;demo.@login[0]=login&#xA;demo.@login[0].username=xxx&#xA;demo.@login[0].password=xxx&#xA;demo.@login[0].ifname=eth0&#xA;demo.@login[0].domainname=jphome.github.com&#xA;demo.@demo_list[0]=demo_list&#xA;demo.@demo_list[0].ip_list=192.168.1.1&#xA;&#xA;然后就可以用uci get/uci set进行操作了 ^ ^&#xA;&#xA;### 另外一种用法&#xA;$ xxx &lt;&lt; EOF        ///&lt; 将两个EOF之间的内容作为参数传给xxx,EOF可替换成任意合法字符&#xA;heredoc&gt; param1&#xA;heredoc&gt; param2&#xA;heredoc&gt; EOF&#xA;&#xA;那就可以将uci操作写成连贯的命令脚本了&#xA;#!/bin/sh&#xA;uci -q batch &lt;&lt; EOF &gt;/dev/null&#xA;add demo test_node&#xA;set demo.@test_node[0].init=0&#xA;commit demo&#xA;EOF&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;如何在c代码中嵌入uci进行uci get/set操作呢&lt;/h4&gt;&#xA;&#xA;&lt;p&gt;还需要去调用不熟悉的网络库代码来获取这种n久不会改变一次的参数么？   &lt;code&gt;NoNoNo!&lt;/code&gt;&#xA;&lt;br/&gt;&#xA;当然，如果会频繁get、set建议还是用c代码实现(至少用uci的api)&#xA;&lt;br/&gt;&#xA;思路：&lt;code&gt;popen + sed + awk&lt;/code&gt;&#xA;&lt;pre&gt;&#xA;char result[16] = {0};&#xA;char *cmdline = NULL;&#xA;cmdline = &amp;ldquo;uci get network.lan.ipaddr&amp;rdquo;;                     ###&amp;lt; 获取ip地址&#xA;cmdline = &amp;ldquo;ifconfig | grep HWaddr | awk &amp;lsquo;{printf $5}&amp;rsquo;&amp;rdquo;;     ###&amp;lt; 获取mac地址&#xA;FILE fp = popen(cmdline, &amp;ldquo;r&amp;rdquo;);&#xA;fgets(result, 16, fp);&#xA;pclose(fp);&#xA;&lt;/pre&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;Refs&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/ruiyiin/article/details/8677785&#34;&gt;http://blog.csdn.net/ruiyiin/article/details/8677785&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.right.com.cn/forum/thread-50257-1-1.html&#34;&gt;http://www.right.com.cn/forum/thread-50257-1-1.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.leiphone.com/diy-a-smart-router-topic-system-configuration.html&#34;&gt;http://www.leiphone.com/diy-a-smart-router-topic-system-configuration.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>OpenWrt启动脚本分析</title>
      <link>http://jphome.github.com/blog/2014/08/13/openwrt_boot.html</link>
      <pubDate>2014-08-13 11:38:46 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;OpenWrt是通过一系列shell脚本进行启动流程的组织，本文介绍启动流程。如果想详细了解启动的过程，则需要仔细走读脚本文件。&lt;/p&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;pre&gt;&#xA;1. 在make menuconfig 选择target平台 Broadcom BCM947xx/953xx [2.4]&#xA;&#xA;2. linux内核的配置文件由下面两个文件组成&#xA;target/linux/generic-2.4/config-default&#xA;target/linux/brcm-2.4/config-default&#xA;&#xA;3. 在配置文件中可以看到&#xA;CONFIG_CMDLINE=&#34;root=/dev/mtdblock2 rootfstype=squashfs,jffs2&#xA;init=/etc/preinit noinitrd console=ttyS0,115200&#34;&#xA;因此，linux内核启动后，首先运行/etc/preinit脚本&#xA;&#xA;4. preinit脚本位置在&#xA;package/base-files/files/etc/preinit&#xA;&#xA;5. preinit脚本是一系列脚本的入口，这一系列脚本放在下面的目录：&#xA;package/base-files/files/lib/preinit&#xA;target/linux/brcm-2.4/base-files/lib/preinit&#xA;编译完成后，会统一放在rootfs的/lib/preinit目录下，&#xA;03_init_hotplug_failsafe_brcm 40_init_shm&#xA;05_failsafe_config_switch_brcm 40_mount_devpts&#xA;05_init_interfaces_brcm 40_mount_jffs2&#xA;05_mount_skip 40_run_failsafe_hook&#xA;05_set_failsafe_switch_brcm 41_merge_overlay_hooks&#xA;10_check_for_mtd 50_choose_console&#xA;10_essential_fs 50_indicate_regular_preinit&#xA;10_indicate_failsafe 60_init_hotplug&#xA;10_indicate_preinit 70_initramfs_test&#xA;15_mount_proc_brcm 70_pivot_jffs2_root&#xA;15_set_preinit_interface_brcm 80_mount_root&#xA;20_check_jffs2_ready 90_init_console&#xA;20_device_fs_mount 90_mount_no_jffs2&#xA;20_failsafe_net_echo 90_restore_config&#xA;20_failsafe_set_boot_wait_brcm 99_10_failsafe_login&#xA;30_device_fs_daemons 99_10_mount_no_mtd&#xA;30_failsafe_wait 99_10_run_init&#xA;由于脚本众多，因此openwrt的设计者将这些脚本分成下面几类：&#xA;preinit_essential&#xA;preinit_main&#xA;failsafe&#xA;initramfs&#xA;preinit_mount_root&#xA;每一类函数按照脚本的开头数字的顺序运行。&#xA;&#xA;6. preinit则执行下面的两类脚本&#xA;boot_run_hook preinit_essential&#xA;boot_run_hook preinit_main&#xA;&#xA;7. preinit执行的最后一个脚本为99_10_run_init，运行&#xA;exec env - PATH=$pi_init_path $pi_init_env $pi_init_cmd&#xA;pi_init_cmd为&#xA;pi_init_cmd=&#34;/sbin/init&#34;&#xA;因此开始运行busybox的init命令&#xA;&#xA;8. busybox的init命令执行inittab的脚本，该脚本来自&#xA;package/base-files/files/etc/inittab&#xA;::sysinit:/etc/init.d/rcS S boot&#xA;::shutdown:/etc/init.d/rcS K stop&#xA;tts/0::askfirst:/bin/ash --login&#xA;ttyS0::askfirst:/bin/ash --login&#xA;tty1::askfirst:/bin/ash --login&#xA;sysinit为系统初始化运行的 /etc/init.d/rcS S boot脚本&#xA;shutdown为系统重启或关机运行的脚本&#xA;tty开头的是，如果用户通过串口或者telnet登录，则运行/bin/ash --login&#xA;askfirst和respawn相同，只是在运行前提示&#34;Please press Enter to activate&#xA;this console.&#34;&#xA;&#xA;9. 当前启动转到运行 /etc/init.d/rcS S boot，该脚本来自&#xA;package/base-files/files/etc/init.d/rcS&#xA;和preinit类似，rcS也是一系列脚本的入口，其运行/etc/rc.d目录下S开头的的所&#xA;有脚本(如果运行rcS K stop，则运行K开头的所有脚本)&#xA;K50dropbear S02nvram S40network S50dropbear S96led&#xA;K90network S05netconfig S41wmacfixup S50telnet S97watchdog&#xA;K98boot S10boot S45firewall S60dnsmasq S98sysntpd&#xA;K99umount S39usb S50cron S95done S99sysctl&#xA;上面的脚本文件来自：&#xA;package/base-files/files/etc/init.d&#xA;target/linux/brcm-2.4/base-files/etc/init.d&#xA;还有一些脚本来自各个模块，在install时拷贝到rootfs，比如dropbear模块&#xA;package/dropbear/files/dropbear.init&#xA;这些脚本先拷贝到/etc/init.d下，然后通过/etc/rc.common脚本，将init.d的脚&#xA;本链接到/etc/rc.d目录下，并且根据 这些脚本中的START和STOP的关键字，添加&#xA;K${STOP}和S${START}的前缀，这样就决定了脚本的先后的运行次序。&#xA;&#xA;10.可以看出，openwrt的启动主要是两个阶段，preinit主要是完成系统的初始化&#xA;（如文件系统的准备、模块的加载），rcS主要依次 启动各个模块。&#xA;&#xA;附：脚本走读的一些技巧&#xA;a. rootfs目录在build_dir/target-mipsel_uClibc-0.9.30.1/root-brcm-2.4，可以直接在该目录下走读shell脚本。&#xA;b. openwrt的shell脚本比较复杂，因此看脚本时可以通过添加 set -x和echo等命令，直接看shell脚本的结果，而不要花太多的时间硬看脚本，主要是理解其主要的意思和设计思路。&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;Refs&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.chinaunix.net/uid-26598889-id-3060545.html&#34;&gt;http://blog.chinaunix.net/uid-26598889-id-3060545.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>OpenWrt常见疑问</title>
      <link>http://jphome.github.com/blog/2014/08/13/readme_qa.html</link>
      <pubDate>2014-08-13 11:30:46 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;在使用基于OpenWrt开发的时候会碰到很多问题，汇总方便查阅&lt;/p&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;openwrt的wlan0接入其他路由器上网&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;1. 将openwrt的LAN口地址配成192.168.2.1&#xA;2. WWAN配成DHCP客户端&#xA;3. 在无线中搜索热点&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;通过有线能连openwrt的ssh,wifi不能&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;1. openwrt通过Dropbear提供ssh&amp;scp服务&#xA;2. 配置防火墙中WWAN口入路由器的权限&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;配置路由器启动默认开启wifi&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;trunk/package/mac80211/files/lib/wifi/mac80211.sh&#xA;option disabled 1&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;单独编译内核模块安装包&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;make package/kernel/xxx {compile, install} V=s&#xA;PS: OpenWrt的kernel modules配置文件都在这儿&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;添加U盘/移动硬盘支持&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;添加USB挂载&#xA;Base system —&gt; &lt;*&gt;block-mount   &#xA;添加硬盘格式支持（）&#xA;Kernel modules —&gt; Filesystems —&gt; &lt;*&gt; kmod-fs-ext4 (移动硬盘EXT4格式选择)&#xA;Kernel modules —&gt; Filesystems —&gt; &lt;*&gt; kmod-fs-vfat(FAT16 / FAT32 格式 选择)&#xA;Kernel modules —&gt; Filesystems —&gt; &lt;*&gt; kmod-fs-ntfs (NTFS 格式 选择)&#xA;添加UTF8编码,CP437编码，ISO8859-1编码&#xA;Kernel modules —&gt; Native Language Support —&gt; &lt;*&gt; kmod-nls-cp437&#xA;Kernel modules —&gt; Native Language Support —&gt; &lt;*&gt; kmod-nls-iso8859-1&#xA;Kernel modules —&gt; Native Language Support —&gt; &lt;*&gt; kmod-nls-utf8&#xA;添加SCSI支持&#xA;Kernel modules —&gt; Block Devices —&gt; &lt;*&gt;kmod-scsi-core&#xA;添加USB相关支持&#xA;Kernel modules —&gt; USB Support —&gt; &lt;*&gt; kmod-usb-core.&#xA;Kernel modules —&gt; USB Support —&gt; &lt;*&gt; kmod-usb-ohci.&#xA;Kernel modules —&gt; USB Support —&gt; &lt;*&gt; kmod-usb-storage.&#xA;Kernel modules —&gt; USB Support —&gt; &lt;*&gt; kmod-usb-storage-extras.&#xA;Kernel modules —&gt; USB Support —&gt; &lt;*&gt; kmod-usb2.&#xA;添加自动挂载工具&#xA;Utilities —&gt; Filesystem —&gt; &lt;*&gt; badblocks&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;取消strip&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;make package/xxx {clean, compile} V=99 STRIP=/bin/true&#xA;也就是说如果默认使用strip破坏了你的程序、库，可以使用STRIP=/bin/true来取消strip操作，直接在Makefile中定义也是可以的&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;U-boot移植编译&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;http://www.right.com.cn/forum/thread-84684-1-1.html&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;4G LTE的移植&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;大致步骤 移植4G网卡，改写网络配置文件，改写4G拨号脚本，配置WIFI和WIFI的DHCP。&#xA;涉及文件：&#xA;内核部分   driver/usb/serial/option.c   加PID,VID&#xA;文件系统部分： &#xA;/etc/config/network   加入WAN接口配置并配置为4G模式；加入WIFI接口，并配置为静态地址模式以便能自动启。&#xA;/etc/config/wireless  将wifi-iface的network字段与 /etc/config/network中的WIFI接口匹配相同&#xA;/etc/config/firewall    修改防火墙规则，使各个接口都可以通信。&#xA;/etc/config/dhcp      添加WIFI接口的DHCP功能&#xA;/etc/chatscripts/3g.ch  拨号脚本&#xA; 以上所有文件内容在这个网页：&#xA; http://blog.csdn.net/sydjm/article/details/8490357&#xA;A、4G网卡移植，参照以下，把网卡的PID VID写进内核中，否则可能不能转换MODEM模式。&#xA; http://wiki.openwrt.org/zh-cn/doc/recipes/3gdongle&#xA; 内核可能需要添加USB存储支持和块设备的SCSI支持。&#xA; http://www.hkepc.com/forum/viewthread.php?tid=1712898&#xA; http://www.hkepc.com/forum/viewthread.php?tid=1712898&amp;rpid=26287429&amp;ordertype=0&amp;page=1#pid26287429&#xA; http://www.hkepc.com/forum/viewthread.php?tid=1661598&#xA; 移植4G的APN是 CMNET ，需要写进/etc/config/network,/etc/chatscripts/3g.chat&#xA;B、配置WIFI及其DHCP&#xA;http://wiki.openwrt.org/doc/recipes/routedap&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;SVN版本控制&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;svn 回滚 或 svn 指定版本  &#xA;需要的版本是 28007&#xA;操作：&#xA;1. SVN 最新的代码 ： svn co svn://svn.openwrt.org/openwrt/trunk -r 28007&#xA;2. 回滚或到指定版本：svn up -r 28007&#xA;指定LUCI版本&#xA;cd trunk/feeds/luci &#xA;svn up -r r7612&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;添加复位键支持&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;Utilities  ---&gt; &lt;*&gt; restorefactory&#xA;添加一键开关无线&#xA;Utilities  ---&gt; &lt;*&gt; wifitoggle&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;Refs&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/sydjm/article/details/8232963&#34;&gt;http://blog.csdn.net/sydjm/article/details/8232963&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>LuCI新增页面</title>
      <link>http://jphome.github.com/blog/2014/08/03/luci_add_page.html</link>
      <pubDate>2014-08-03 07:21:14 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;以luci-app-njitclient客户端学习luci新增页面&#xA;&lt;hr/&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;代码结构&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;package&#xA;├── helloworld&#xA;├── luci-app-njitclient-master&#xA;│   ├── files&#xA;│   │   └── root&#xA;│   │       ├── etc&#xA;│   │       │   ├── config&#xA;│   │       │   │   └── njitclient&#xA;│   │       │   └── init.d&#xA;│   │       │       └── njitclient&#xA;│   │       └── usr&#xA;│   │           └── lib&#xA;│   │               └── lua&#xA;│   │                   └── luci&#xA;│   │                       ├── controller&#xA;│   │                       │   └── njitclient.lua&#xA;│   │                       └── model&#xA;│   │                           └── cbi&#xA;│   │                               └── njitclient.lua&#xA;│   ├── LICENSE&#xA;│   ├── Makefile&#xA;│   └── README.md&#xA;└── Makefile&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;代码&lt;/h3&gt;&#xA;&#xA;&lt;h5&gt;package/luci-app-njitclient-master/Makefile&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;include $(TOPDIR)/rules.mk&#xA;&#xA;## 软件包名称，将在menuconfig和ipkg可以看到&#xA;PKG_NAME:=luci-app-njitclient&#xA;## 软件版本号&#xA;PKG_VERSION=1.0&#xA;## Makefile的版本号&#xA;PKG_RELEASE:=1&#xA;## 软件维护者&#xA;PKG_MAINTAINER:=JPH &lt;jphome98@163.com&gt;&#xA;## 源代码的文件名&#xA;# PKG_SOURCE&#xA;## 源代码的下载网站位置&#xA;# PKG_SOURCE_URL&#xA;# 获取代码方式可以为git、svn、cvs、hg、bzr等&#xA;# 下载方法参考$(INCLUDE_DIR)/download.mk 和 $(SCRIPT_DIR)/download.pl&#xA;#   @SF     sourceforge网站&#xA;#   @GNU    GNU网站&#xA;#   @GNOME&#xA;#   @KERNEL&#xA;## 源代码文件的效验码&#xA;# PKG_MD5SUM&#xA;## 源代码文件的解压方法&#xA;# PKG_CAT&#xA;&#xA;## 软件包编译目录 [默认为$(BUILD_DIR)/$( PKG_NAME)$( PKG_VERSION)]&#xA;PKG_BUILD_DIR:=$(BUILD_DIR)/$(PKG_NAME)&#xA;&#xA;include $(INCLUDE_DIR)/package.mk&#xA;&#xA;## 编译包 定义&#xA;define Package/$(PKG_NAME)&#xA;    # 包的类型&#xA;    SECTION:=luci&#xA;    # 分类, 在menuconfig的菜单下将可以找到&#xA;    CATEGORY:=LuCI&#xA;    # 子分类 对应menuconfig中/LuCI/3. Applications/luci-app-njitclient&#xA;    SUBMENU:=3. Applications&#xA;    # 软件包的简短描述&#xA;    TITLE:=NJIT 802.1X Client for LuCI&#xA;    # control中的 Architecture 字段, 默认为当前编译器的交叉编译环境平台&#xA;    PKGARCH:=all&#xA;    # URL               软件包的下载地址&#xA;    # MAINTAINER        维护者&#xA;    # DEPENDS           与其他软件的依赖, 即如编译或安装需要其他软件时需要说明 DEPENDS:=+libmath +libzlib&#xA;endef&#xA;&#xA;## 软件包的详细描述, control中的 Description 字段, 默认为TITLE&#xA;define Package/$(PKG_NAME)/description&#xA;    This package contains LuCI configuration pages for njit8021xclient.&#xA;endef&#xA;&#xA;## 编译准备 创建文件夹、拷贝源文件&#xA;define Build/Prepare&#xA;endef&#xA;&#xA;## 针对需要配置的软件包 Automake中./configure&#xA;define Build/Configure&#xA;endef&#xA;&#xA;## 编译方法 没特殊说明不定义 使用默认编译方法&#xA;# $(MAKE) -C $(PKG_BUILD_DIR) \&#xA;#   $(TARGET_CONFIGURE_OPTS) CFLAGS=&#34;$(TARGET_CFLAGS) -I$(LINUX_DIR)/include&#34;&#xA;define Build/Compile&#xA;endef&#xA;&#xA;## 软件包的安装方法     $(1) -&gt; 嵌入系统的镜像目录 /&#xA;define Package/$(PKG_NAME)/install&#xA;    $(INSTALL_DIR) $(1)/etc/config&#xA;    $(INSTALL_DIR) $(1)/etc/init.d&#xA;    $(INSTALL_DIR) $(1)/usr/lib/lua/luci/model/cbi&#xA;    $(INSTALL_DIR) $(1)/usr/lib/lua/luci/controller&#xA;    &#xA;    $(INSTALL_CONF) ./files/root/etc/config/njitclient $(1)/etc/config/njitclient&#xA;    $(INSTALL_BIN) ./files/root/etc/init.d/njitclient $(1)/etc/init.d/njitclient&#xA;    $(INSTALL_DATA) ./files/root/usr/lib/lua/luci/model/cbi/njitclient.lua $(1)/usr/lib/lua/luci/model/cbi/njitclient.lua&#xA;    $(INSTALL_DATA) ./files/root/usr/lib/lua/luci/controller/njitclient.lua $(1)/usr/lib/lua/luci/controller/njitclient.lua&#xA;endef&#xA;&#xA;## 软件包安装前处理方法, 使用脚本语言&#xA;define Package/$(PKG_NAME)/preinst&#xA;    #!/bin/sh&#xA;    echo &#34;###$(PKG_MAINTAINER): To install $(PKG_NAME)&#34;&#xA;endef&#xA;&#xA;## 软件包安装后处理方法, 使用脚本语言&#xA;define Package/$(PKG_NAME)/postinst&#xA;    #!/bin/sh&#xA;    echo &#34;###$(PKG_MAINTAINER): $(PKG_NAME) install succeed&#34;&#xA;endef&#xA;&#xA;## 软件包删除前处理方法, 使用脚本语言&#xA;define Package/$(PKG_NAME)/prerm&#xA;    #!/bin/sh&#xA;    echo &#34;###$(PKG_MAINTAINER): To remove $(PKG_NAME)&#34;&#xA;endef&#xA;&#xA;## 软件包删除后处理方法, 使用脚本语言&#xA;define Package/$(PKG_NAME)/postrm&#xA;    #!/bin/sh&#xA;    echo &#34;###$(PKG_MAINTAINER): $(PKG_NAME) remove succeed&#34;&#xA;endef&#xA;&#xA;## 使用eval函数实现各种定义&#xA;$(eval $(call BuildPackage,$(PKG_NAME))&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;package/luci-app-njitclient-master/files/root/usr/lua/luci/controller/njitclient.lua&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;--[[ 模块入口 ]]&#xA;&#xA;-- 程序模块名    /usr/lib/lua/luci/controller/njitclient.lua&#xA;module(&#34;luci.controller.njitclient&#34;, package.seeall)&#xA;&#xA;function index()&#xA;    -- 添加一个新的模块(Page)入口&#xA;    -- entry(路径, 调用目标, _(&#34;显示名称&#34;), 显示顺序)&#xA;    -- 路径 以字符串数组给定 {&#34;admin&#34;, &#34;network&#34;, &#34;njitclient&#34;} -&gt; http://ip/cgi-bin/luci/admin/network/njitclient&#xA;    -- 调用目标：&#xA;        -- 执行指定方法（Action）：call(&#34;function_name&#34;)&#xA;        -- 访问指定页面（Views）：template(&#34;myapp/mymodule&#34;) 访问/usr/lib/lua/luci/view/myapp/mymodule.htm&#xA;        -- 调用CBI(Configuration Binding Interface) Module：cbi(&#34;myapp/mymodule&#34;)  调用/usr/lib/lua/luci/model/cbi/myapp/mymodule.lua&#xA;        -- 重定向：alias(&#34;admin&#34;, &#34;status&#34;, &#34;overview&#34;)&#xA;    entry({&#34;admin&#34;, &#34;network&#34;, &#34;njitclient&#34;}, cbi(&#34;njitclient&#34;), _(&#34;NJIT Client&#34;), 100)&#xA;    end&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;package/luci-app-njitclient-master/files/root/usr/lua/luci/model/cbi/njitclient.lua&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;--[[ 配置模块实际的代码 ]]&#xA;&#xA;require(&#34;luci.sys&#34;)&#xA;&#xA;-- 映射与存储文件的关系&#xA;-- m = Map(&#34;配置文件文件名&#34;, &#34;配置页面标题&#34;, &#34;配置页面说明&#34;)&#xA;    -- 配置文件文件名：配置文件存储的文件名，不包含路径 /etc/config/xxx&#xA;m = Map(&#34;njitclient&#34;, translate(&#34;NJIT Client&#34;), translate(&#34;Configure NJIT 802.11x client.&#34;))&#xA;&#xA;-- 配置文件中对应的section&#xA;s = m:section(TypedSection, &#34;login&#34;, &#34;&#34;)&#xA;-- 不允许增加或删除&#xA;s.addremove = false&#xA;-- 不显示Section的名称&#xA;s.anonymous = true&#xA;&#xA;-- 配置文件中section的交互(创建Option)&#xA;    -- Value（文本框）&#xA;    -- ListValue（下拉框）&#xA;    -- Flag（选择框）&#xA;enable = s:option(Flag, &#34;enable&#34;, translate(&#34;Enable&#34;))&#xA;name = s:option(Value, &#34;username&#34;, translate(&#34;Username&#34;))&#xA;pass = s:option(Value, &#34;password&#34;, translate(&#34;Password&#34;))&#xA;pass.password = true&#xA;domain = s:option(Value, &#34;domain&#34;, translate(&#34;Domain&#34;))&#xA;&#xA;ifname = s:option(ListValue, &#34;ifname&#34;, translate(&#34;Interfaces&#34;))&#xA;for k, v in ipairs(luci.sys.net.devices()) do&#xA;    if v ~= &#34;lo&#34; then&#xA;        ifname:value(v)&#xA;    end&#xA;end&#xA;&#xA;-- 判断是否点击了“应用”按钮&#xA;local apply = luci.http.formvalue(&#34;cbi.apply&#34;)&#xA;if apply then&#xA;    io.popen(&#34;/etc/init.d/njitclient restart&#34;)&#xA;end&#xA;&#xA;return m&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;package/luci-app-njitclient-master/files/root/etc/init.d/njitclient&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;#!/bin/sh /etc/rc.common&#xA;START=50&#xA;&#xA;run_njit()&#xA;{&#xA;    local enable&#xA;    # 获取变量值&#xA;    # config_get_bool 变量名 Section名 Section参数名&#xA;    config_get_bool enable $1 enable&#xA;    &#xA;    if [ $enable ]; then&#xA;        local username&#xA;        local password&#xA;        local domain&#xA;        local ifname&#xA;        &#xA;        # 获取变量值&#xA;        # config_get 变量名 Section名 Section参数名&#xA;        config_get username $1 username&#xA;        config_get password $1 password&#xA;        config_get domain $1 domain&#xA;        config_get ifname $1 ifname&#xA;        &#xA;        if [ &#34;$domain&#34; != &#34;&#34; ]; then&#xA;            njit-client $username@$domain $password $ifname &amp;&#xA;        else&#xA;            njit-client $username $password $ifname &amp;&#xA;        fi&#xA;        &#xA;        echo &#34;NJIT Client has started.&#34;&#xA;    fi&#xA;}&#xA;&#xA;start()&#xA;{&#xA;    # 读取配置文件&#xA;    config_load njitclient&#xA;    &#xA;    # 遍历配置文件中的Section&#xA;    # config_foreach 遍历函数名 Section类型&#xA;    config_foreach run_njit login&#xA;}&#xA;&#xA;stop()&#xA;{&#xA;    killall njit-client&#xA;    killall udhcpc&#xA;    &#xA;    echo &#34;NJIT Client has stoped.&#34;&#xA;}&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;package/luci-app-njitclient-master/files/root/etc/init.d/njitclient&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;config login&#xA;    option username &#39;&#39;&#xA;    option password &#39;&#39;&#xA;    option ifname &#39;eth0&#39;&#xA;    option domain &#39;&#39;&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;Refs&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://chaochaoblog.com/archives/359&#34;&gt;http://chaochaoblog.com/archives/359&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.7forz.com/1973/&#34;&gt;http://www.7forz.com/1973/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/andy-ahz/p/3722538.html&#34;&gt;http://www.cnblogs.com/andy-ahz/p/3722538.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>笑话合集</title>
      <link>http://jphome.github.com/blog/2014/08/02/fun.html</link>
      <pubDate>2014-08-02 10:09:16 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;讲个笑话乐一乐&#xA;&lt;hr/&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&#xA;相亲的时候，气氛冷场。男的想找个话题就问女的：“你看，旁边桌的那个女人长得好丑啊。”女的冷冷回了句：“她是我姐。”男的愣了愣，故作镇定说道：“呵呵！真不好意思，你们长这么像，我早应该猜到的！”然后就没有然后了...&#xA;&#xA;相亲时，男生问女生：“额，你喜欢什么样的的男生呢？” 女子非常文雅的说“人家只是一个淡淡的女子，想找一个淡淡的的男子！” 男生一脸尴尬的说：“对不起，咱们……不合适！…………我有两个…………”&#xA;&#xA;男子去提亲，女方家长：请自我介绍。A说：我是富二代，我有一千万；B说：我是富二代，我有一栋豪宅，价值两千万；家长很满意。就问C，你家有什么？C答：我什么都没有，只有一个孩子，在你女儿肚子里。AB无语，走了。&#xA;&#xA;年过35的中年汉，终于鼓起勇气参加电脑征婚，提出的择偶对象条件有四点：1.娇小玲珑；2.不怕寒冷，喜爱冬泳；3.身体健康；4.团队精神良好。一星期后，电脑择偶中心也终于有了回应，电脑显示是：企鹅。&#xA;&#xA;今天去相亲，对面的猥琐男一直在小声念，隔了好久终于听清了：关了灯都一样，关了灯都一样……&#xA;&#xA;本人女，23岁。 &#xA;近期因为有点烦心事，一直觉得胸闷、呼吸不畅，其他倒没啥感觉。&#xA;老妈比较担心，就带我去看医生，医生说没什么问题，我妈不放心，拖着我去看中医。&#xA;医生是一老大爷，望闻问切之后，问我：“你胸闷是不是白天很明显，晚上就没什么感觉了？”&#xA;我回想一下，觉得的确如此，就回答说“是的”。&#xA;我妈忙问：“孩子这是怎么了？”&#xA;中医大爷拨了拨眼镜，抬起头来望着我，说：“胸罩小了！”&#xA;我去！一屋人皆捂嘴笑，姐凌乱了！&#xA;话说回家换下胸罩穿个背心，果然呼吸畅快&#xA;&#xA;一天早晨，我和同事一边等公车一边抽烟，旁边还有一漂亮MM也在一边喝豆浆一边等车，同事开玩笑的说：哥，你的车呢？我说：送去修了；旁边漂亮MM很认真 的看了我一眼，同事顺势继续说：咋回事？我接着编着说：这不那天么，请客户吃完饭出来，和一个大奔追尾了，MM继续认真听着；同事继续装：哎呀，那得多少 钱啊，要不我给你去找找4S店的人，我认识几个朋友；我说：哎呀不用，一个脚蹬子能值几个钱！！MM的豆浆喷了一地...&#xA;&#xA;公厕看到一则标语“尿不进说明你短，尿不准说明你软”......顿感鸭梨巨大&#xA;&#xA;她攥紧双手对我说：哥哥，你猜猜我手里有几个开心果，如果你猜对了，我把手里的两个都给你。我对她轻蔑的笑了笑，说：两个。她听完松开双手大声的喊道：错啦，是一个！我内牛满面!&#xA;&#xA;大四时，一日自习完下楼，以为走我前面的一人是舍友，偷偷跑上前去朝他屁股狠狠的踹了一脚，还大喊：你竟然来自习了？！那人揉着屁股回头可怜巴巴的看着我，颤抖着说：恩。四目相对几秒后，我正犹豫着怎么道歉呢，那人答道：大哥，我大一新生，以后不敢了…&#xA;&#xA;今天情人节，有个暗恋已久的MM打电话给我：“来我家吧，没人！” 我兴奋的狂奔而去！！！！！！！敲了一个多小时的门，发现真的没人……&#xA;&#xA;上大学的时候，厕所是那种老式的一排坑位，而且没有门。有一天晚上厕所灯坏了，自己找了个坑位，蹲下去的时候，一只手有力的托住了臀部，一个低沉的声音响 起：有人！&#xA;&#xA;大学的时候，刚进学校。学校让我们填一份自我简介，里面包括体育强项。同桌告诉我不要写那种运动会用的到的项目，不然以后运动会会强迫你参加。于是我们写 的是高尔夫、网球、滑雪之类的，本想转过身去提醒后面玩的好的男生，结果一看他写的体育强项是双脚踩灯泡、胸口碎大石&#xA;&#xA;某医院的加护病房的病人总是在星期天十 一点左右死掉，这让医生们困惑不解，甚至认为是灵异事件，于是成立专家组调查事情的原因。到了星期天，时钟刚刚敲响十一点，通过监视器发现，在星期天打扫 的清洁工走进加护病房，拔掉重病号的生命维持系统电线插头，然后插上了吸尘器插头，开始打扫卫生。。。&#xA;&#xA;皇帝对身旁的小李子说：你用一个字来形容朕。&#xA;小李子回答：喳！&#xA;然后小李子就被砍了。。。&#xA;&#xA;萝卜小时候很闷骚，一肚子坏水。话说有一次闲的蛋疼，在家拉了坨shi在报纸上，之后裹好，裹了N+1层报纸，硕大的一团，放在了邻居家的门口。然后用火机点着报纸，之后敲邻居家的门。邻居问是谁没人答，好奇的开门看看。&#xA;门打开的一瞬间，我艹！对了，你猜对了。&#xA;面对家门口一坨正在燃烧的报纸，你的第一反应是什么？&#xA;用脚去踩！灭火！！没错！！就是这样！！！&#xA;于是邻居的各种问候祖先的声音在楼道间响彻了整整一下午。&#xA;&#xA;对面的小帅哥吃面真浪费。面条扒拉两口就走人。于是我正义的把那碗面倒给路边看起来很饿的野猫。一会儿，小帅哥回来了，手里拿着一瓶水。一脸狐疑的看着那个空碗…那一刻，我只想当个埋头吃面的路人甲…&#xA;&#xA;某村开会讨论改革殡葬节约土地资源，村民们各抒己见。 甲说：我建议啊！都不用棺材了，省钱又省地。 乙说：我看竖着埋可以更省地方。 丙磕了磕烟枪，慢悠悠的说：我看啊，竖着来只埋下半截，连墓碑也省了，一看就知道谁死了!&#xA;&#xA;电话铃声响，小女孩接起电话听筒……&#xA;男人：“喂，宝宝，我是爸爸，妈妈在哪儿？”&#xA;小女孩：“妈妈和陈叔叔在楼上的房间。”&#xA;男人有点生气地说：“哪个陈叔叔？我们家不认识叫陈叔叔的人啊!”&#xA;小女孩：“有啊，每次你上班后就来的陈叔叔啊。”&#xA;过了很久，男人沉住气冷静地说：“宝宝，爸爸来和你来玩个游戏好不好。”&#xA;小女孩兴奋地说：“好哇！”&#xA;小女孩照着做了，不久听到一阵惨叫，小女孩跟着听电话……&#xA;男人：“妈妈怎么了？”&#xA;小女孩：“妈妈听到你回来后，就冲出房间，不小心从楼梯跌下来，现在不动了。”&#xA;男人有点满意地接着问：“那——陈叔叔呢？”&#xA;小女孩：“我看到他从房间的窗口跳下游泳池，可是他好像忘记爸爸前天为了清理游泳池已把水放了，现在他躺在游泳池底，也不动了。”&#xA;男人沉默了一阵子……&#xA;男人：“游……游泳池？我们家没……游泳池啊!请问这里号码是不是xxxxxxxx？”&#xA;小女孩：“不是。”&#xA;男人：“噢，抱歉，打错电话了。” &#xA;&#xA;一个在菜场看到的，神一般的大爷！ &#xA;那大爷买西红柿来着的，挑了三个放到秤盘里，摊主秤了下说：“一斤半，三块七。” &#xA;大爷说：“我就做个汤，用不着那么多。”说完就去掉了个儿最大的那个西红柿。 &#xA;摊主迅速又瞧一眼秤子，“一斤二两，三块。” &#xA;正当我看不过去想提醒大爷注意摊主的秤子时，大爷从容的掏出了七毛钱，拿起刚刚去掉的那个大的西红柿，扭头就走了…… &#xA;摊主当场就凌乱了…&#xA;&#xA;晚上，我和女儿在客厅看电视，老公在书房上网，我有点渴了，却不想动，就说：老公&#xA;，拿瓶可乐给我。老公从书房出来给我拿了一瓶，又跑回书房。这时，五岁的女儿也喊&#xA;到：爸爸，我也要喝。老公不耐烦的说：自己拿！女儿愣了一下，又喊到：老公，我也要喝。&#xA;&#xA;一女在博客上哭诉，说是上街碰到了老公的老师才知道，老公给女儿取得名字是他初恋的名字。并说一直知道自己老公曾经很爱初恋，后来初恋出国才不了了之。和 自己认识老公一直很好，本以为自己是最幸福的人，现在才知道，原来老公一直没忘记初恋。一网友回到：其实你老公是想告诉初恋：我草泥马。。。&#xA;&#xA;话说有一天肚子疼，急忙忙包去厕所，褪下裤子之后用了半天劲儿，嗙的一生，放了巨响的屁。&#xA;然后就听到隔壁坑的哥们:“我擦......”&#xA;当我完事要走时，那哥们又说：兄弟还有纸吗？刚才被你一吓，纸掉坑里了！&#xA;&#xA;昨晚回到贵州，飞机上，本来想逗逗空姐，结果被空姐给涮了，发餐时，我说，你有纸巾不？MM从兜里拿出纸巾给我；又问，你有牙签不，她又从另外的兜里拿出牙签；哥很郁闷，再问你有一次性筷子不，MM把筷子递给了我，同时说了一句让我石化的话：我像哆拉A梦不？&#xA;&#xA;要是问我，异地恋是什么感觉？我想说，就像在手机里养了只宠物。&#xA;&#xA;有一姐妹为人豪爽可爱，她跟他老公感情特别好，有一次我们吃饭说起小三，我问她：你老公要是有外遇了，你跟他离婚吗？她斜眼看看他老公，淡淡的说：我这辈子没有离异，只有丧偶！&#xA;&#xA;喂，兄弟是我。嗯，是这样的。最近刚投资了一个项目，2000万，就差500。别着急挂啊，喂！喂？艹……&#xA;&#xA;以前高中的事，一哥们经常在班里放屁，重点是都嫁祸给其他人。一天班里来老师听课，坐最后一排，一老师就坐在我哥们旁边，上课时这哥们放了一个特别响的 屁，这时全班安静了，都转过来看后面，gc来了，这货捂着鼻子看着旁边的老师，所有的目光都转移到那老师那了，那老师一下就呆滞了，嘴角抽搐着……&#xA;&#xA;今天看舍友打CF，作为一个退役已久的玩家，忽然想考考他，问：突突突是什么枪的声音？答：MP5。又问：咔咔咔呢？又答：AN94。继续问：哒哒哒 呢？继续答：M4AL。我想起威力最大的AK47，就问：啪啪啪是什么枪的？这时旁边一个正在编程的孩子说：那不是高富帅的枪声么？&#xA;&#xA;今天去洗澡，洗完从女部大厅出来的时候只见一妈妈拉着五六岁的男孩往里拽，男孩死活不进去，边后退嘴里还喊着：我才不去女澡堂，里面都是女的，羞死人了。妈妈：小子你再不进去以后都别想进了！回家问问你爹看他现在多想进都进不去！说着拽进去了。&#xA;&#xA;今天下午我和6岁的侄子看电视，我说：长大后你去当兵吧！他说：我不能当兵。我问：为什么？他说：我的头太大了！我想了半天也没想出为什么头大就不能当兵！结果他说：头大容易被瞄准啊！！！原来如此啊！！！&#xA;&#xA;话说有一天，一朋友弄开水的时候一不小心，手机掉进了滚烫的开水中。这不是gc，他异常淡定的冒着生命危险从滚烫的热水中捞出了他的手机，这也不是gc，gc是他又急速地丢进了凉水里……&#xA;&#xA;我们学校有个老师个子很矮，长的又嫩，看起来很像学生。一天，他在楼道抽烟，校长路过发现十分气愤，过去就踹了他一脚，责问道：你是哪个班的？老师委屈地回答：高三（2）的。校长：班任是谁？他：我。校长：……&#xA;&#xA;以前上高中军训的时候，带我们的那个男教练非常严，请假休息都不准，一天，集合站军姿，一女生大声喊：报告厕所，我要上教官！好像这是教官唯一一个批的假。看来想请到假不出狠招是不行啊！&#xA;&#xA;最近拉肚子 躺床上的时候二货室友正坐我床边吃饭 突然有了屁意 怕她在吃饭突然放屁不好 就跟她说 我要放屁了 （意思叫她去别的地方吃）这货回头看我愣了一下 然后犹豫着放下筷子把耳朵堵上了 我。。。。&#xA;&#xA;微信上面摇到个美女，相谈甚欢，今晚竟然约我见面，矮油，莫非是传说中的约炮，满心欢喜，打扮一番，照她发的地址，××楼××室，一敲开门，尼玛十几号人在里面坐着，上面挂着横幅“完美产品座谈会”，我去年买了个大山包！&#xA;&#xA;高中数学课，老师讲题說：这道题要怎么做，我们可以先设，设完之后干嘛呢。底下一牛叉同学大声喊出：拔出来！！教室鸦雀无声…&#xA;&#xA;今天学了一个新词叫滚床单，然后俺就在微博上找了个姑娘问：“滚床单吗？” 姑娘答：“滚！”……有点蒙，她这是答应俺了吗？&#xA;&#xA;我在网上买了件复古衬衣，直接扔到洗衣机里。过了一会我妈惊慌失措地跑过来：“你奶奶死了这么多年了，为什么她年轻时候的一件衬衣会在我们家洗衣机里？”&#xA;&#xA;小时候跟小伙伴们比赛看谁尿得远，每次都是我赢，后来被人告发，爸爸逮住我就是一顿胖揍！打完以后警告我「你小子成天和一帮女娃娃比赛，不臊得慌！&#xA;&#xA;哥们特别能玩，昨晚打麻将，一直打到快12点，这货赢了七百多！打完后，就去了KTV，，叫了几个公主陪唱！这货满嘴酒气的对人家讲：“你让我亲一口我给你3万！”天真的小姑娘就闭上了眼睛，然后就被哥们亲了一口，之后手里被塞了一只麻将。 。。&#xA;&#xA;老婆晚上跟老公在客厅看电视，很晚了老公说睡觉啊？！ 老婆跟老公耍赖，“老公，我要你抱我进去！” 老公看了看我说：“算了，我还把床给你搬出来吧！！”&#xA;&#xA;一个厂做的同事过来对我说:我终于要抱孙子啦。我回:恭喜恭喜啊！然后他抱了我一下。。&#xA;&#xA;我的手机已经用了三年多，觉得跟不上潮流了，于是向老婆请求，想换一个。&#xA;老婆说：“要换就换个一步到位的。”&#xA;我一听很惊喜，谁知老婆来了句：“给你换个老人机！&#xA;&#xA;老婆要出差数天，出门前强调：下班后只能呆家里，不准去搓麻将。晚上，男人去跟哥们搓麻。女人打电话问：在哪？男人：在家看电视呢。女人：什么节目？男人：体育台，国足都输了两球。女人：去把我床头那本小说拿过来。男人：拿来你还能看不成？女人：就是让你看下上次折的是第几页？男人：…&#xA;&#xA;&#xA;以前在一个院子租房子住，这天搬来一对小情侣，因为是夏天都开着窗户，每天到了晚上他们爱爱的声音特别大，大家都给房东太太反映，连续忍了几天以后，在他们又一次爱爱的时候房东太太过去敲门说：小伙子有啥事你不能好好说大半夜的把她打成啥样了叫的这么惨。&#xA;&#xA;昨天去网吧，一个美眉收钱，我问:多少钱一小时？ 她红着脸说: 60。我怒:搞错了吧！ 走出网吧，后来才知道，我错了！！&#xA;&#xA;老王问小李为什么眼睛肿了。小李说：“今天早上我穿裤子的时候，前面一颗扣子掉了，我不会缝，所以就跑到隔壁去，要一位太太帮我缝上。”“天哪！她一定认为你太过分，而给你一个拳头！&#34;&#34;不，不是这样！她人很好，当场就拿出针线缝了起来我也站著给她缝，可是就当她缝完，用嘴把线咬断时，她老公进来了&#xA;&#xA;跟屋里人出去吃晚饭的时候，隔壁桌有个小孩子边吃边唱：“我家住在黄土高坡，我爸是我妈表哥，他们没结婚就开始偷偷摸摸，嘎吱嘎吱就有了我~哦吼哦吼吼~” 。老爹老妈听的脸都有点抽了，我跟媳妇只能埋头吃饭。&#xA;&#xA;妹子肚子疼，发消息给男友，外地的男友对她说：“亲爱的，你把手机开震动放在肚子上，我不停地打，全当我给你揉肚子了……”&#xA;&#xA;校园的傍晚，男女生并肩坐在墙角，女生揉着裙摆羞涩的说：“你知道吗，据说百分之九十的女生都喜欢强吻的感觉。”，男生推了推眼镜，思索片刻后问道：“为什么剩下的百分之十喜欢墙不稳？”&#xA;&#xA;生命里有门功课，名叫&#34;接受&#34;：接受爱的人离开，接受亲的人离世，接受喜欢的人无论如何也不喜欢自己，接受喜欢的人无论如何也不能在一起…以及接受自己的出身、相貌、天份。无论活多大，每一次在“接受”面前，我依就像个只会嚎哭的孩子…区别是，长大的自己会对自己说“接受，是变好的开始”&#xA;&#xA;高中时数学老师巨牛B，第一次上课拿了一副牌进教室，给每人发一张，要求大家记住自己的牌。从此之后他每天上课都带着那副牌，在讲台上边洗牌边上课！时不时丢出两张牌淡淡道：“方块4梅花J上来做题。”&#xA;&#xA;问：和女朋友吵架了怎么办？！讲道理？错！冷静？大错！和她争执？大错特错！现在告诉你正解答案！！！大吼一声！“老子要不是看你漂亮、温柔、善良、可爱、早他妈和你分手了！”霸气又戳中妹子软肋。据不完全统计、用完这一招，妹纸们的生气程度立马骤降80%！&#xA;&#xA;女孩小时候叫文静，大一点叫童真，再大一点叫可爱，再大一点叫淑女，再大一点叫白富美，再大一点叫御姐，再大一点叫亲切，再大一点叫慈祥。我们男的，小时候叫顽皮，大一点叫捣蛋，再大一点叫坏孩子，再大一点叫不良少年，再大一点叫屌丝，再大一点叫猥琐，再大一点叫猥琐大叔，再大一点叫老不死&#xA;&#xA;开学第一天老师点名，突然有一个很奇怪的名字，但老师还是大声地念了出来：“木棍！谁叫木棍？”只见一个孩子说：“老师，我不叫木棍我叫林昆。”全班大笑。此后这个孩子为了避免这种情况发生，就把名字竖着写。一次来了个新老师，老师发卷子时念道：林日比！林日比上来取卷子！”&#xA;&#xA;每次媳妇一跟我吵架，就哭着跑出去逛街购物，以发泄心中的不满。 今天媳妇哭着对我说：“这日子没法过了。” 我问媳妇怎么了，她说：“你已经一个星期没跟我吵架了。”&#xA;&#xA;前两天路过一宾馆，正好碰见一男一女两同事从里面出来，只看了他们一眼啥也没说，第二天我办公桌抽屉里莫名其妙多了一条中华烟........ &#xA;&#xA;一天我们生物老师给我们讲种群 她说：种群是指可以自由交配并繁育的同种个体的群体 那你们说我们教室是不是一个种群？ 童鞋都很和谐的回答：“不是。” 为什么不是 只听见后排一个阴暗的角落传来“因为不能自由交配……”&#xA;&#xA;白雪公主吃了王后的毒苹果后昏迷不醒 七个小矮人日夜守护 最后白马王子的真情之吻救醒了公主 他们便幸福的生活在了一起 这个故事告诉我们 屌丝对女神再好 也只是为高富帅的出场做铺垫&#xA;&#xA;常【哈哈】的人，长得就比较喜庆。常【嘿嘿】的人，无人能与你争傻。常【嘻嘻】的人，可爱得有点天真。常【啧啧】的人，单纯又性感。常【吼吼】的人，你和嘿嘿有的一拼。常【哼哼】的人，又坏又可爱。常【呜呜】的人，装可爱失败。常【呵呵】的人，恭喜你，装逼成功。。。&#xA;&#xA;【日本一咖啡店门口的创意文案】如何获得男朋友。 1：来本店买一杯咖啡，打包带走。2：送给喜欢的男子，告诉他：如果好喝的话，我们就在一起吧～ 3：本店咖啡很好喝，所以必成功。 ※ 如果被拒绝了，请再次光临本店，我们这次提供一杯热咖啡，你带回去泼他脸上。&#xA;&#xA;公鸡被人打死了，黑猫警长询问守门的狗大爷:“你知道是谁杀死的公鸡吗？”狗大爷想了想:“母鸡呀。”母鸡听到了跳出来破口大骂:“你大爷的，说话能不能别带广东腔？”&#xA;&#xA;北京，一个下午，男生接到了刚分手不久女孩的电话，女孩说：“我2个小时后的飞机，如果你能来我就不走了。” 男生非常激动，放下工作马上冲下写字楼，并坚定说道：“我爱你，等我。” 2个小时过去了，他还在三里屯打车。。。4个小时后，小伙终于赶到了机场，发现姑娘正在候机大厅领泡面。。。&#xA;&#xA;许多年前，我有过这样一个手机，它只能存储200条短信，里面装的满满的回忆，每当存满了，都要精挑细选的删掉我的，留住她的，当时真的好想要一个能存500条短信的手机，而如今，我有了一个可以无限量存储短信的手机，但却再也找不到那个能和我聊200条短信的人...&#xA;&#xA;今天第一次在驾校学开车，学那个半坡起步，下坡的时候车急速往下滑行，教练大吼一声：用脚刹！我脑子一懵，车门一开，将一只脚塞到外面磨在地上终于将车速度稳定下来&#xA;&#xA;排队买早餐，有人从背后拍了我一下，我回头一看，是俩姑娘， 其中一个害羞地笑了笑说：“不好意思啊， 认错人了……” 我回过头去。然后隐隐约约地听见其中一个姑娘说：“帅个屁啊……” 尼玛。。。&#xA;&#xA;两只小鸟分别站在零线和火线上，本来他们相安无事。后来那只雄鸟亲了雌鸟一下。这个故事告诉我们，秀恩爱的都得死。——鸟嘴的化学成分是磷灰石，而磷灰石是不导电的。但这两只鸟居然被电死了，显然，它们舌吻了…&#xA;&#xA;早上，某男生在课间一面津津有味的啃着大面包，一面和后面的女生聊天，可那女生目不转睛的盯着男生的面包（那女生没来得及买早餐），那男生发现了，关心的问：怎么？你没吃早餐吗女生急忙点头，期待男生会分她一点面包。男生：哦！那我过去那边吃吧，免得你看见了，会觉得更饿！&#xA;&#xA;一男一女在迪高厅里讨价还价，女的伸出五个手指比划，男的伸出三个手指比划。然后相约到酒店开房。完事后那女的掏出三百元放下就走，然后那男的凌乱了。&#xA;&#xA;一小伙追不到某姑娘，很苦恼，于是找禅师诉苦 “大师，我该怎么办？” 大师不语，拿来一根线系在一只鸡的腿上，鸡一跑大师就拉回线，鸡便摔倒，如此重复了八次。 禅师开口问青年“你看懂了什么？” “哦！大师，你在告诉我要执着！” “傻逼，我是告诉你，拉JB倒吧！…&#xA;&#xA;公厕里见过烟头什么的这些都弱爆了！ 我今天入公厕，坑前竟然有一堆瓜子皮。尼玛，境界太高了！&#xA;&#xA;弟兄俩上山采蘑菇，哥哥说颜色鲜艳的有毒，不能吃。&#xA;弟弟说先给狗吃，看看有事没。狗吃了没事，摇头摆尾出去溜达了。&#xA;他俩一看没事，就吃了。弟弟出去一圈，回来说，哥，狗死了。&#xA;哥哥吓的，把准备好的肥皂水粪水灌下去，吐的死去活来。&#xA;缓过来以后问，狗死的惨不？弟弟说，死老惨了，一出门就让大卡车压死了！&#xA;&#xA;办公区有两个洗手间，一个近点一个远点。&#xA;一次遇见一同事从远点的那出来，就很奇怪的问她，为什么不就近要跑那么远，她原话是：“那边味道要好点。”&#xA;&#xA;专家称眼睛千万不要连续对着手机超过两个小时，那样手机会没电。&#xA;同时专家还指出：若手机没电一定要记得充，否则第二天一早没法拉屎。 &#xA;&#xA;今天听说一个碰瓷的事，一富二代帅哥将豪车停在路边一个大妈突然躺在车前不起来了，张口问二代要一万块，不然就不起来，去医院检查就是不去，富二代拿出电话打电话说：爸爸，往我卡上打四五十万，我要撞死个人。。。大妈爬起来就走了。。&#xA;&#xA;《同桌的你》里有这么几句：“我也将有我的妻，我也会给她看相片，给她讲同桌的你。” &#xA;我试了一次，没想到，第二天我就只能睡沙发了！&#xA;&#xA;老婆是个吃货，一般吃袋装零食都会拿过来让我帮撕开。。。&#xA;为了不影响我玩游戏，我都是一边操作着键盘，然后用牙咬着帮她打开。&#xA;就在刚刚，这货拿了袋洗衣粉过来。。。尼玛，至今都没吐干净。。。&#xA;&#xA;一瘦弱哥们到家后，发现老婆在偷汉子！ 哥们气得发抖，但又不敢发作。 只得轻轻退了出来，还顺手把门锁了， 然后拨了个电话：“妈，不好了！您闺女把自己锁在房里，说要自杀！” 没过十分钟，丈母娘一家就全来了.整整三车人…….&#xA;&#xA;话说朋友酷爱玩电脑，他妈妈看他那不求上进的样于是在一旁教育许久，朋友一声不吭地盯着电脑，突然他看到自己制作的视频被转载过万，激动万分地对他妈说：妈，别说了，我要火了！他妈一个巴掌抡过去：反了你了。&#xA;&#xA;今天一同事颠颠地跑过来小声跟我说：“我觉得你像古代的一位君王！”楼主龙颜大悦问道：”朕像谁？” “春秋时期的越王！” “为什么？” “因为你够贱！”（越王勾践）&#xA;&#xA;坐地铁，对面的女高中生睡着了，渐渐歪倒，眼看要靠到右边大叔肩上，可每次快靠上时又激灵一下醒来，重新坐正……这么重复几次，大叔终于失望地下车。女孩突然睁开眼睛，问旁边的同伴：“怎么样？”“哈哈你没看到太可惜了！脸超级红！还往你那送肩！”“哈哈真猥琐！”“哈哈哈哈！”太！残！忍！&#xA;&#xA;妈妈对我说，姑娘家家的，不要动不动就我操、法克、谢特的乱骂，太不好了，有损形象。我羞愧的低下了头，在内心谴责我自己。下一秒钟，妈妈指着前面一辆突然插进来的车说：＂我操，你个狗杂种！敢蹩老娘的车！看我不弄死你！＂我：＂……＂&#xA;&#xA;成长就是你哪怕难过的快死掉了，但你第二天还是照常去上课上班。没有人知道你发生了什么，也没有人在意你发生了什么。关于你的未来，只有你自己才知道。既然解释不清，那就不要去解释。没有人在意你的青春，也别让别人左右了你的青春。&#xA;&#xA;一天我问女神：知道黄瓜怎么用吗？ 女神：不知道！ 我：知道茄子怎么用吗？ 女神：不知道！ 我：知道苦瓜怎么用吗？ 女神：不知道！ 我：那芒果呢？ 女神：啊？芒果也可以啊？&#xA;&#xA;热恋时。女：“你根本就不爱我！你只喜欢我的身体！”十年后。女：“你根本就不爱我！你已经一个月没碰过我了！”&#xA;&#xA;东京申奥成功，看到一句相当霸气的评论：太好了！这样中国的国歌就能在日本国土上，从第一天唱到最后一天了！&#xA;&#xA;在宿舍，LZ的舍友特胖一屁股把LZ我的手机坐在他屁股下面，当时LZ正等女神的电话结果找不到电话，用舍友的手机打LZ我的号码，结果语音提示“您拨打的号码不在服务区”这强大的屁股。。。。胖子你赢了&#xA;&#xA;上学时，一些同学搞破坏，把石头扔厕所里，厕所一星期堵了两次，结果第二周全校开大会。教育主任讲话：我们学校有一些学生不讲卫生，上厕所不带纸，带石头！&#xA;&#xA;又把老婆惹毛了，道歉了也没用，她气呼呼地在家里转圈：“哼！我要去买个贵的东西！”&#xA;我一听，有转机！花钱消灾呗！&#xA;马上说：“好啊！我陪你去买。”&#xA;然后我们一起去了小商品市场买了个搓衣板回来……&#xA;&#xA;如来：“取经一路，对你们师傅有什么不满吗？”&#xA;悟空暴跳如雷：“哼！师父总错怪我，事后才说哎呀我真不知道那是妖怪，每次都马后炮！”&#xA;八戒摸着耳朵：“师父马后炮，总由着大师兄欺负我后才说他两句尔尔”&#xA;沙僧老实巴交：“呃…师父平日里是马后炮…还是问白龙马吧”&#xA;此时白龙马早已流下满面委屈的泪水。&#xA;&#xA;晚上，老婆在看电视，老公在和同事打电话。&#xA;临挂机时，老公说了句：“还是选小三吧。”&#xA;老婆脸上的黑线就下来了，问：“你很喜欢小三吗？”&#xA;“嗯，小三看着顺眼”&#xA;老婆一个巴掌甩过来，把老公逐出了家门。&#xA;老公坐在门外捂着脸，委屈地说：“排版选个字号，我惹着谁了……”&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;Refs&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.qiushibaike.com/&#34;&gt;http://www.qiushibaike.com/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>Raspberry Pi烧写Openwrt固件</title>
      <link>http://jphome.github.com/blog/2014/08/01/raspberry_pi_openwrt.html</link>
      <pubDate>2014-08-01 09:55:26 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;给树莓派做上Openwrt固件学习luci编程&lt;/p&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;1.下载Openwrt固件、启动补丁文件&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;固件：openwrt-brcm2708-sdcard-vfat-ext4_224.img&#xA;http://downloads.openwrt.org/attitude_adjustment/12.09/brcm2708/generic/&#xA;启动补丁：使用OPENWRT的正确姿势.zip&#xA;http://pan.baidu.com/share/link?shareid=496011089&amp;amp;uk=1328231555&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;2.烧写固件&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;插上SD卡&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;sudo umount /dev/sdbn           ###&amp;lt; 卸载/dev/sdb的所有分区&#xA;sudo fdisk /dev/sdb             ###&amp;lt; 删除/dev/sdb的所有分区&#xA;sudo dd bs=1M if=openwrt-brcm2708-sdcard-vfat-ext4_224.img of=/dev/sdb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;完成后使用补丁文件bootcode.bin、start.elf替换SD卡FAT分区的启动文件&lt;/p&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;Refs&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://show.smzdm.com/detail/41689&#34;&gt;http://show.smzdm.com/detail/41689&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</description>
    </item>
    <item>
      <title>sed</title>
      <link>http://jphome.github.com/blog/2014/06/15/readme_sed.html</link>
      <pubDate>2014-06-15 01:14:48 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;摘录sed工具的使用&lt;/p&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;h3&gt;url:&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;http://blog.csdn.net/a81895898/article/details/8482387&#xA;http://coolshell.cn/articles/9104.html&#xA;http://tsnc.zhongaokao.com/tsnc_wgrj/doc/sed.htm&#xA;http://kodango.com/sed1line-notes&#xA;&lt;/pre&gt;&#xA;    &#xA;&#xA;&lt;h3&gt;sed调试工具&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;sedsed&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;正则：&lt;/h3&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;h4&gt;规则&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;^       表示一行的开头&#xA;$       表示一行的结尾&#xA;\&lt;      表示词首。如\&lt;abc表示以abc为首的词&#xA;\&gt;      表示词尾。如\&gt;abc表示以abc为尾的词&#xA;.       表示任意单个字符&#xA;*       表示某个字符出现了0次或多次&#xA;+       表示某个字符出现了1次或多次&#xA;[abc]   表示a或b或c字符&#xA;[^c]    表示非c的字符&#xA;&amp;       表示被匹配的变量&#xA;\num    被匹配的第num个分组（\(...\)括起来的部分成为分组）&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;e.g.&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;/[012]\{3\}/                                ###&lt; 三个数字 [012]{3}&#xA;sed &#39;s/xxx/[&amp;]/g&#39; my.txt                    ###&lt; 匹配项加[]&#xA;s/(ACTIVE_CONSOLES=/dev/tty\[1-)6]/\12]/    ###&lt; ACTIVE_CONSOLES=/dev/tty[1-6]&#xA;                                            ###&lt; -&gt; ACTIVE_CONSOLES=/dev/tty[1-2]&#xA;&lt;/pre&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h3&gt;工作形式&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;sed [option] script file&#xA;script是由一条或多条指令(instruction)构成&#xA;指令由正则表达式(pattern)和编辑命令(action)构成&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;工作过程&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;以行为单位处理&#xA;每一行都是被读入到一块缓存空间，该空间名为模式空间(pattern space)&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;sed选项&lt;/h3&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;h4&gt;-e：选项可选，在命令行中同时指定多个操作指令时用到&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;sed -e &#39;s/x/y/&#39; -e &#39;s/y/x/&#39; file&#xA;sed &#39;s/x/y/;s/y/x/&#39; file&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;-n：抑制默认输出（sed默认会把处理过的内容全输出）&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;sed &#39;s/x/y/p&#39; file          默认输出全部内容，等于把匹配的行输出两遍&#xA;sed -n &#39;s/x/y/p&#39; file       只打印匹配的行&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;-i：对文件进行修改&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;默认不修改文件，输出到stdout&#xA;作用类似 sed &#34;s/my/jphome&#39;s/g&#34; pets.txt &gt; pets.txt&#xA;sed &#34;s/my/jphome&#39;s/g&#34; pets.txt          ###&lt; 输出文件到stdout，没有对文件进行修改&#xA;&lt;/pre&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h3&gt;sed打印命令&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;# p：打印匹配行 （类似于grep）&#xA;sed &#39;/fish/p&#39; my.txt        /// 会输出所有&#xA;sed -n &#39;fish/p&#39; my.txt      /// 只打印匹配行&#xA;&#xA;# =：打印行号&#xA;sed &#39;/fish/=&#39; my.txt&#xA;&#xA;# l：打印行，打印在模式空间中的行，同时显示控制字符&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;sed转换命令&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;# [address]y/SET1/SET2/&#xA;echo &#34;hello world&#34; | sed &#39;y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/&#39;     ###&lt; -&gt; HELLO WORLD&#xA;sed &#39;y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/&#39; file&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;sed编辑命令&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;# i：前面插入&#xA;# a：后面添加&#xA;# c：替换行&#xA;sed &#39;1 i Insert&#39; my.txt             ###&lt; 在第一行前插入一行xxx&#xA;sed &#39;$ a Append&#39; my.txt             ###&lt; 在最后一行后添加一行xxx&#xA;sed &#39;/fish/a Append fish&#39; my.txt    ###&lt; 在匹配到fish的那行后面插入一行xxx&#xA;sed &#39;2 c This is monkey&#39;            ###&lt; 替换第二行为xxx&#xA;sed &#34;/fish/c this is monkey&#34;        ###&lt; 替换匹配到fish的行&#xA;/fish/c\                            ###&lt; 支持多行&#xA;xxx\                                ###&lt; sed -i -f xxx.sed xxx.txt&#xA;xxx&#xA;&#xA;# d：删除行&#xA;sed &#39;/fish/d&#39; my.txt        /// 删除匹配到fish的一行&#xA;sed &#39;2d&#39; my.txt         /// 删除第二行&#xA;sed &#39;2,$d&#39; my.txt       /// 删除第二到最后一行&#xA;&#xA;# s：匹配替换(s/xx/xx/)&#xA;单引号内无法使用转义符/&#xA;# 只替换每一行的第一个xx&#xA;sed &#39;s/xx/xx/1&#39;&#xA;# 只替换每一行的第二个xx&#xA;sed &#39;s/xx/xx/2&#xA;# 只替换每一行的第三个以后的xx&#xA;sed &#39;s/xx/xx/3g&#39;&#xA;# 替换每一行的所有匹配&#xA;sed &#39;s/xx/XX/g&#39;&#xA;&#xA;# r: 将文件内容读入匹配行后面&#xA;# sed会把r后面的任何字符判断为文件名,直到回车或单引号，所以不能用;来连接其他语句&#xA;sed &#39;/pattern/r file1&#39; file                     ###&lt; 将file1文件的内容添加到匹配行后面&#xA;sed &#39;/pattern/{r file1&#39; -e other cmd} file&#xA;sed &#39;/pattern/{r file1&#xA;other cmd&#xA;}&#39; file&#xA;&#xA;# w: 将匹配到的内容写到文件&#xA;sed &#39;/pattern/w file1&#39; file&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;保持空间&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;# 小写覆盖、大写追加（追加内容与原内容以\n分隔）&#xA;h/H     将模式空间的内容复制/者追加到保持空间&#xA;g/G     将保持空间的内容复制/者追加到模式空间&#xA;x       交换模式空间和保持空间的内容&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;其他&lt;/h3&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;h4&gt;!&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;表示后面的命令对所有没有被选定的行发生作用&#xA;/pattern/!{}&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;把12，34，56&amp;hellip;行当成同一行来匹配&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;sed &#39;N;s/\n//&#39; my.txt       ###&lt; 就是把12，34，56...合并成一行&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;修改指定行&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;sed &#39;3s/xx/xx/g&#39; pets.txt               ###&lt; 第3行&#xA;sed &#39;3,6s/xx/xx/g&#39; pets.txt             ###&lt; 第3～6行&#xA;sed &#39;1,${/this/d;s/^ *//g}&#39; pets.txt&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;在sed语句内使用变量&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;sed -i &#39;s/^xxx/xx=`$DIR`/&#39; xxx.file&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;条件正则&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;sed &#39;/^#define/{s/ //g}&#39;&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;n: 读取下一个输入行,用下一个命令处理新的行&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;/.H1/{n;/^$/d}      ###&lt; 删除.H1之后的第一个空行&#xA;&lt;/pre&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h3&gt;例子&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;# 去除html文件中的tags&#xA;sed &#39;s/&lt;[^&gt;]*&gt;//g&#39; index.html &gt; index.html&#xA;# 行首加#&#xA;sed &#39;s/^/#/g&#39; pets.txt&#xA;# 行尾加 ---&#xA;sed &#39;s/$/ ---/g&#39; pets.txt&#xA;# 使用逗号,拼接行&#xA;sed &#39;H;$!d;${x;s/^\n//;s/\n/,/g}&#39; file&#xA;&#xA;# 命令打包&#xA;sed &#39;4,6 {/This/{/fish/d}}&#39; pets.txt&#xA;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>安装使用slickedit</title>
      <link>http://jphome.github.com/blog/2014/04/13/readme_slickedit.html</link>
      <pubDate>2014-04-13 10:06:37 +0800</pubDate>
      <description>&lt;h3&gt;类似&lt;code&gt;SourceInsight&lt;/code&gt;编辑器,尝个鲜&lt;/h3&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;官网下载v18.0.1版本&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;wget http://www.slickedit.com/assets/trial/se_18000102_linux32.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;安装&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;    tar xvf se_18000102_linux32.tar.gz&#xA;    cd se_18000102_linux32 &#xA;    sudo ./vsinst&#xA;    安装到/opt/slickedit路径下&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;破解 &lt;a href=&#34;http://blog.book41.net/?p=751&#34;&gt;REF&lt;/a&gt;&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;    cd /opt/slickedit/bin&#xA;    sudo cp vs_exe vs_exe.bak       ###&lt; 备份&#xA;    sudo chmod 775 vs_exe           ###&lt; 加w权限&#xA;    sudo vim vs_exe -b              ###&lt; 编辑二进制,不加换行符&#xA;    :%!xxd                          ###&lt; 进入十六进制编辑模式&#xA;    /009D370                        ###&lt; 搜索地址&#xA;    修改5个字节                     ###&lt; 具体见下图&#xA;    :%!xxd -r                       ###&lt; 转回二进制&#xA;    :wq                             ###&lt; 保存退出&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/img/img_readme_slickedit_0.png&#34; alt=&#34;from&#34; /&gt;&#xA;&#xA;&lt;br/&gt;&#xA;&lt;br/&gt;&#xA;&lt;img src=&#34;/assets/media/img/img_readme_slickedit_1.png&#34; alt=&#34;to&#34; /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>Linux 下查看局域网内所有主机IP和MAC</title>
      <link>http://jphome.github.com/blog/2014/03/29/readme_nmap.html</link>
      <pubDate>2014-03-29 11:03:54 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;用nmap对局域网扫描一遍，然后查看arp缓存表就可以知道局域内ip对应的mac了。nmap比较强大也可以直接扫描mac地址和端口。执行扫描之后就可以 cat /proc/net/arp查看arp缓存表了。&#xA;&lt;br/&gt;&#xA;&lt;br/&gt;&#xA;转自&lt;a href=&#34;http://blog.chinaunix.net/uid-25885064-id-3483813.html&#34;&gt;残剑&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;进行ping扫描，打印出对扫描做出响应的主机：&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;$ nmap -sP 192.168.1.0/24&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;仅列出指定网络上的每台主机，不发送任何报文到目标主机：　&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;$ nmap -sL 192.168.1.0/24&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;探测目标主机开放的端口，可以指定一个以逗号分隔的端口列表(如-PS 22，23，25，80)：&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;$ nmap -PS 192.168.1.234&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;使用UDP ping探测主机：&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;$ nmap -PU 192.168.1.0/24&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;使用频率最高的扫描选项（SYN扫描,又称为半开放扫描），它不打开一个完全的TCP连接，执行得很快：&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;$ nmap -sS 192.168.1.0/24&#xA;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>用u盘扩展openwrt路由器存储</title>
      <link>http://jphome.github.com/blog/2014/03/29/readme_opkg.html</link>
      <pubDate>2014-03-29 09:36:20 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;由于flash太小,可以用&lt;code&gt;读卡器+sd卡/U盘/移动硬盘&lt;/code&gt;来扩展路由器的存储&#xA;&lt;hr/&gt;&lt;/p&gt;&#xA;&#xA;&lt;h4&gt;1. 将usb存储格式化成ext3文件系统&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;mkfs.ext3 /dev/sdb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;2. 挂载sd卡&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;mkdir /mnt/sda1&#xA;mount -t ext3 /dev/sda1 /mnt/sda1&#xA;mkdir /mnt/sda1/packages&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;3. 修改opkg配置文件&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;echo dest usb /mnt/sda1/packages &amp;gt;&amp;gt; /etc/opkg.conf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;4. opkg更新&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;opkg update&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;5. 修改PATH环境变量&lt;/h4&gt;&#xA;&#xA;&lt;p&gt;vim /etc/profile&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;export PATH=$PATH:/mnt/sda1/packages/usr/bin:/mnt/sda1/packages/usr/sbin&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;6. 安装软件&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;opkg --dest usb install python&#xA;opkg --dest usb install helloworld.ipk&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>使用OpenWrt SDK开发ipk(helloworld.ipk)</title>
      <link>http://jphome.github.com/blog/2014/03/29/openwrt_sdk.html</link>
      <pubDate>2014-03-29 04:07:24 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;几年前想编译一个helloworld.ipk,由于以下原因当年尝试失败了&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;当年太水(现在还是很湿)&#xA;学校网络太操蛋(ubuntu下借脚本连闪讯,时断时序,编译个固件要纯手工6+H,想想都是泪)&#xA;太jb费时间(一个helloworld整了几天没整出来,灰心了)&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h4&gt;1. 下载openwrt trunk代码&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;svn co svn://svn.openwrt.org/openwrt/trunk/&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;2. 编译openwrt brcm63xx固件,注意勾上sdk&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;make menuconfig&#xA;make V=99&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;3. 使用brcm63xx平台sdk编译ipk&lt;/h4&gt;&#xA;&#xA;&lt;h5&gt;解压 sdk &lt;code&gt;bin/OpenWrt-SDK-xxx.tar.bz2&lt;/code&gt;&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;tar xvf OpenWrt-SDK-xxx.tar.bz2&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;在package路径下建立helloworld工程&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;package&#xA;├── helloworld&#xA;│   ├── Makefile&#xA;│   └── src&#xA;│       ├── helloworld.c&#xA;│       └── Makefile&#xA;└── Makefile&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;建立staging_dir链接(交叉编译工具)&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;cd sdk&#xA;ln -s ../trunk/staging_dir ./staging_dir&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;编译&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;make distclean&#xA;make menuconfig&#xA;make V=99&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;pre&gt;&#xA;bin&#xA;├── brcm63xx&#xA;│   └── packages&#xA;│       ├── helloworld_1.0-1_brcm63xx.ipk&#xA;│       ├── Packages&#xA;│       └── Packages.gz&#xA;└── packages&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;hr/&gt;&#xA;&#xA;&lt;h3&gt;代码&lt;/h3&gt;&#xA;&#xA;&lt;h5&gt;package/helloworld/Makefile&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;include $(TOPDIR)/rules.mk&#xA;include $(INCLUDE_DIR)/package.mk&#xA;&#xA;PKG_BUILD_DIR:=$(BUILD_DIR)/$(PKG_NAME)&#xA;&#xA;PKG_NAME:=helloworld&#xA;# Version: 1.0-1&#xA;PKG_VERSION:=1.0&#xA;PKG_RELEASE:=1&#xA;PKG_MAINTAINER:=JPH &lt;jphome98@gmail.com&gt;&#xA;# PKG_SOURCE_URL:=&#xA;&#xA;define Package/helloworld&#xA;    SECTION:=utils&#xA;    CATEGORY:=Utilities&#xA;    DEFAULT:=y&#xA;    TITLE:=Helloworld -- prints a snarky message&#xA;    # DEPENDS:=+libmath&#xA;endef&#xA;&#xA;define Build/Prepare&#xA;    @echo &#34;############## Build/Prepare&#34;&#xA;    $(Build/Prepare/Default)&#xA;    $(CP) ./src/* $(PKG_BUILD_DIR)  &#xA;endef&#xA;&#xA;define Package/helloworld/install&#xA;    @echo &#34;############## Package/helloworld/install&#34;&#xA;    $(INSTALL_DIR) $(1)/usr/bin&#xA;    $(INSTALL_BIN) $(PKG_BUILD_DIR)/helloworld $(1)/usr/bin&#xA;endef&#xA;&#xA;$(eval $(call BuildPackage,helloworld))&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;package/helloworld/src/helloworld.c&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;#include &lt;stdio.h&gt;&#xA;&#xA;int main(int argc, const char *argv[])&#xA;{&#xA;    printf(&#34;hello world! \n&#34;);&#xA;&#xA;    return 0;&#xA;}&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;package/helloworld/src/Makefile&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;helloworld: helloworld.o&#xA;    $(CC) helloworld.o -o helloworld&#xA;&#xA;helloworld.o: helloworld.c&#xA;    $(CC) -c helloworld.c&#xA;&#xA;clean:&#xA;    rm *.o helloworld&#xA;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>vim按键</title>
      <link>http://jphome.github.com/blog/2013/11/07/shortcut_vim.html</link>
      <pubDate>2013-11-07 11:01:24 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;摘录vim编辑器的常用按键&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://hi.baidu.com/sevkm/item/b6becb46f47b4016896d10ff&#34;&gt;网上参考&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;h3&gt;vim教程&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;:help tutor@cn&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;常用按键&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;d                              ###&amp;lt; 剪切&#xA;y                              ###&amp;lt; 复制&#xA;s                              ###&amp;lt; 剪切并进入insert模式&#xA;p                              ###&amp;lt; 粘帖&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;自动编排格式&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;可视模式选中代码行后按&amp;rsquo;=&amp;rsquo;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;重复操作&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;.                               ###&amp;lt; 重复上次的命令&#xA;10dd                            ###&amp;lt; 在按键前加数字(重复次数)&#xA;100iinsert[ESC]                 ###&amp;lt; 插入100个insert&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;缩进代码&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&#xA;&amp;lt;&amp;lt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;移动、跳转&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    k&#xA;h       l&#xA;    j&#xA;w                              ###&amp;lt; 光标往前移动一个词&#xA;b                              ###&amp;lt; 光标往后移动一个词&#xA;0                              ###&amp;lt; 移动光标到当前行首&#xA;^                              ###&amp;lt; 移动光标到当前行的第一个字母位置&#xA;$                              ###&amp;lt; 移动光标到行尾&#xA;)                              ###&amp;lt; 移动光标到下一个句子&#xA;(                              ###&amp;lt; 移动光标到上一个句子&#xA;H                              ###&amp;lt; 移动光标到屏幕上面&#xA;M                              ###&amp;lt; 移动光标到屏幕中间&#xA;L                              ###&amp;lt; 移动光标到屏幕下面&#xA;&#xA;b, w                           ###&amp;lt; 移动到上，下一个词&#xA;gg, G                          ###&amp;lt; 跳到文档开头，结尾&#xA;100G                           ###&amp;lt; 跳到第100行&#xA;&#xA;%                              ###&amp;lt; 跳到括号匹配处&#xA;*                              ###&amp;lt; 匹配当前单词,移动到下一个匹配单词&#xA;#                              ###&amp;lt; 匹配当前单词,移动到上一个匹配单词&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;书签&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ma                             ###&amp;lt; 在当前光标的位置标记一个书签，名字为a(书签名只能是小写字母)&#xA;`a                             ###&amp;lt; 到书签a处&#xA;`.                             ###&amp;lt; 到你上次编辑文件的地方&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;插入&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;i                              ###&amp;lt; 在当前字符的左边插入&#xA;I                              ###&amp;lt; 在当前行首插入&#xA;a                              ###&amp;lt; 在当前字符的右边插入&#xA;A                              ###&amp;lt; 在当前行尾插入&#xA;o                              ###&amp;lt; 在当前行下面插入一个新行&#xA;O                              ###&amp;lt; 在当前行上面插入一个新行&#xA;c{motion}                      ###&amp;lt; 删除motion命令跨过的字符并进入insert模式&#xA;d{motion}                      ###&amp;lt; 删除motion命令跨过的字符&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;退出：&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;:q!                            ###&amp;lt; 不保存退出&#xA;:wq                            ###&amp;lt; 保存退出&#xA;ZZ                             ###&amp;lt; 保存并退出&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;undo &amp;amp; redo&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;u                              ###&amp;lt; undo&#xA;&amp;lt;C+r&amp;gt;                          ###&amp;lt; redo&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;复制粘帖剪切：&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;p                              ###&amp;lt; 粘帖&#xA;]p                             ###&amp;lt; 粘帖 自动调整被粘贴的文本的缩进去适应当前代码的位置&#xA;dd                             ###&amp;lt; 剪切整行&#xA;S                              ###&amp;lt; 剪切整行后进入insert模式&#xA;dw                             ###&amp;lt; 剪切一个单词&#xA;cw                             ###&amp;lt; 剪切一个单词后进入insert模式&#xA;s                              ###&amp;lt; 剪切一个字符&#xA;x                              ###&amp;lt; 剪切一个字符后进入insert模式&#xA;D                              ###&amp;lt; 剪切至行尾&#xA;xp                             ###&amp;lt; 交换两个字符&#xA;ddp                            ###&amp;lt; 交换两行&#xA;yy，Y                          ###&amp;lt; 复制一行&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;可视模式即选择模式 配合y（复制），p（粘帖）&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;v                              ###&amp;lt; 进入基于字符的可视模式&#xA;V                              ###&amp;lt; 进入基于行的可视模式&#xA;y                              ###&amp;lt; 复制选择的部分&#xA;d                              ###&amp;lt; 剪切选择的部分&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;翻页&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;C+f&amp;gt;, &amp;lt;C+b&amp;gt;                   ###&amp;lt; 向下，上翻页&#xA;&amp;lt;C+d&amp;gt;, &amp;lt;C+u&amp;gt;                   ###&amp;lt; 向下，上半翻页&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;跳到第23行&lt;/h3&gt;&#xA;&#xA;&lt;h6&gt;23gg，23G，:23&lt;/h6&gt;&#xA;&#xA;&lt;h3&gt;查找替换&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;C-w&amp;gt; f                        ###&amp;lt; 查找词&#xA;gf                             ###&amp;lt; 查找词&#xA;/text                          ###&amp;lt; 从当前光标处开始搜索字符串text&#xA;?text                          ###&amp;lt; 和上面类似，但是是反方向&#xA;#                              ###&amp;lt; 从光标向后查找整个关键词&#xA;*                              ###&amp;lt; 从光标向前查找整个关键词&#xA;:s/if/else                     ###&amp;lt; 查找替换下一个if&#xA;:%s/if/else                    ###&amp;lt; 查找替换所有if&#xA;:s/if/else/g                   ###&amp;lt; 只对当前行有效&#xA;:1,3 s/if/else/g               ###&amp;lt; 只对1，3行有效&#xA;正则表达区别：词头锚定用\而不是^&#xA;:grep /\&amp;lt;main\&amp;gt;/ src/*.c       ###&amp;lt;&#xA;:vimgrep /\&amp;lt;main\&amp;gt;/ src/*.c    ###&amp;lt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;窗口&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;:split/vsplit                  ###&amp;lt; 分隔一个窗口&#xA;:new/vnew                      ###&amp;lt; 创建一个新的窗口&#xA;:sf xxx                        ###&amp;lt; 在新窗口中打开xxx文件&#xA;:close                         ###&amp;lt; 关闭当前窗口&#xA;:only                          ###&amp;lt; 关闭除当前窗口外所有窗口&#xA;&amp;lt;C-w&amp;gt; v                        ###&amp;lt; 分割&#xA;&amp;lt;C-w&amp;gt; h                        ###&amp;lt; 到左面的窗口&#xA;&amp;lt;C-w&amp;gt; j                        ###&amp;lt; 到下面的窗口&#xA;&amp;lt;C-w&amp;gt; k                        ###&amp;lt; 到上面的窗口&#xA;&amp;lt;C-w&amp;gt; l                        ###&amp;lt; 到右面的窗口&#xA;&amp;lt;C-w&amp;gt; t                        ###&amp;lt; 到顶部的窗口&#xA;&amp;lt;C-w&amp;gt; b                        ###&amp;lt; 到底部的窗口&#xA;&amp;lt;C-w&amp;gt; w                        ###&amp;lt; 切换窗口&#xA;&amp;lt;C-w&amp;gt; &amp;gt;                        ###&amp;lt; 调整窗口大小&#xA;&amp;lt;C-w&amp;gt; &amp;lt;                        ###&amp;lt; 调整窗口大小&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;跳转&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;[[ 向前跳到顶格的第一个&amp;quot;{&amp;quot;&#xA;[] 向前跳到顶格的第一个&amp;quot;}&amp;quot;&#xA;][ 向后跳到顶格的第一个&amp;quot;{&amp;quot;&#xA;]] 向后跳到顶格的第一个&amp;quot;}&amp;quot;&#xA;[{ 跳到本代码块(由{}界定)的开头&#xA;[} 跳到本代码块的结尾&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;NERD Commenter注释代码&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;,c Space                       ###&amp;lt; 注释代码&#xA;,c u                           ###&amp;lt; 取消注释&#xA;,c c                           ###&amp;lt; 注释当前行&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;vim快捷键图示&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/assets/media/img/img_shortcut_vim.png&#34; alt=&#34;&#34; /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>python数据结构</title>
      <link>http://jphome.github.com/blog/2013/11/07/python_data_struct.html</link>
      <pubDate>2013-11-07 10:44:06 +0800</pubDate>
      <description>&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python&#xA;# -*- coding=utf-8 -*-&#xA;#########################################################################&#xA;# File Name: data_struct.py&#xA;# Author: jphome&#xA;# mail: jphome98@gmail.com&#xA;# Created Time: Fri 06 Sep 2013 10:16:51 PM CST&#xA;#########################################################################&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;字符串&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单引号&amp;rsquo;&lt;/li&gt;&#xA;&lt;li&gt;双引号&amp;rdquo;&lt;/li&gt;&#xA;&#xA;&lt;li&gt;&lt;p&gt;三引号&amp;rdquo;&amp;lsquo;或&amp;rdquo;&amp;ldquo;&amp;rdquo;      ###&amp;lt; 可以多行，中间可以使用&amp;rsquo;和&amp;rdquo;&lt;/p&gt;&#xA;&#xA;&lt;h6&gt;转义 &amp;lsquo;What\&amp;rsquo;s &amp;lsquo; &amp;lsquo;your name?&amp;rsquo;     ==&amp;gt;     &amp;lsquo;What\&amp;rsquo;s your name?&amp;rsquo;&lt;/h6&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;name = &#39;Swaroop&#39;;&#xA;if name.startswith(&#39;Swa&#39;):&#xA;    print &#39;xxx&#39;;&#xA;if &#39;a&#39; in name:&#xA;    print &#39;xxx&#39;;&#xA;if name.find(&#39;war&#39;) != -1:&#xA;    print &#39;xxx&#39;;&#xA;delimiter = &#39;_*_&#39;;&#xA;mylist = [&#39;B&#39;, &#39;R&#39;, &#39;I&#39;, &#39;C&#39;];&#xA;print delimiter.join(mylist);   ###&amp;lt; B_*_R_*_I_*_C&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;列表list&lt;/h3&gt;&#xA;&#xA;&lt;h6&gt;列表可修改&lt;/h6&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;list = [&#39;apple&#39;, &#39;mango&#39;];&#xA;print list;                 ###&amp;lt; 打印 [&#39;apple&#39;, &#39;mango&#39;]&#xA;len(list);                  ###&amp;lt; item个数&#xA;for item in list:           ###&amp;lt; 遍历list&#xA;    print item;&#xA;list.append(&#39;rice&#39;);        ###&amp;lt; 添加item&#xA;list.sort();                ###&amp;lt; 排序list&#xA;olditem = list[0];          ###&amp;lt; 提取item&#xA;del list[0];                ###&amp;lt; 删除item&#xA;&#xA;list.extend(L);             ###&amp;lt; 用链表来扩充链表&#xA;                            ###&amp;lt; 相当于list[len(list):] = L&#xA;list.remove(x);             ###&amp;lt; 移除值为x的元素&#xA;list.pop(3);                ###&amp;lt; &#xA;list.pop();                 ###&amp;lt; 弹出最后一个元素&#xA;list.index(x);              ###&amp;lt; 返回列表中第一个值为x的索引&#xA;list.count(x);              ###&amp;lt; 返回x在列表中出现的次数&#xA;list.reverse();             ###&amp;lt; 列表逆序&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;h4&gt;堆栈stack&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;stack = [];&#xA;stack.append(3);&#xA;stack.pop();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;队列queue&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;queue = [];&#xA;queue.append(4);&#xA;queue.pop(0);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;列表综合&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;listone = [2, 3, 4];&#xA;listtwo = [2*i for i in listone if i&amp;gt;2];    ###&amp;lt; [6, 8]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;列表切片&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;a = [0,1,2,3,4,5,6,7,8,9];&#xA;a[2:4];                         ###&amp;lt; a[2]-a[3]&#xA;a[:3];                          ###&amp;lt; a[0]-a[2]&#xA;a[1:6:2];                       ###&amp;lt; a[1] a[3] a[5] 步进为2&#xA;a[i:j:s];                       ###&amp;lt; i默认为-1,j默认为-len(a)-1&#xA;a[::-1];                        ###&amp;lt; a[-1:-len(a)-1:-1] 其实就是列表逆转&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h3&gt;元组&lt;/h3&gt;&#xA;&#xA;&lt;h6&gt;元组不可变,无法修改&lt;/h6&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;empty = ();                     ###&amp;lt; 空元组&#xA;singleton = (2, );              ###&amp;lt; 单元素的元组,必须加,&#xA;&#xA;zoo = (&#39;wolf&#39;, &#39;elephant&#39;);&#xA;print zoo;                      ###&amp;lt; 打印 (&#39;wolf&#39;, &#39;elephant&#39;)&#xA;len(zoo);                       ###&amp;lt; item个数&#xA;new_zoo = (zoo, &#39;monkey&#39;);      ###&amp;lt; 转移&#xA;print new_zoo;                  ###&amp;lt; ((&#39;wolf&#39;, &#39;elephant&#39;), &#39;monkey&#39;)&#xA;print new_zoo[0][0];            ###&amp;lt; wolf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;# print格式化输出&#xA;age = 22;&#xA;name = &#39;jph&#39;;&#xA;print &#39;%s is %d years old&#39; % (name, age);           ###&amp;lt; 使用元组定制字符串&#xA;print &#39;%s is playing python&#39; % name;                ###&amp;lt; 只需要一个参数时可以不加()&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;字典dict&lt;/h3&gt;&#xA;&#xA;&lt;h6&gt;键值对,键必须唯一&lt;/h6&gt;&#xA;&#xA;&lt;h6&gt;只能使用不可变的对象(比如字符串)作为键&lt;/h6&gt;&#xA;&#xA;&lt;h6&gt;形式: d = {key1:val1, key2:val2};&lt;/h6&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;dict = {&#xA;    &#39;j&#39; : &amp;quot;jj&amp;quot;,&#xA;    &#39;p&#39; : &#39;pp&#39;,&#xA;    &#39;h&#39; : &#39;hh&#39;&#xA;};&#xA;dict[&#39;j&#39;] = &#39;jb&#39;;                           ###&amp;lt; 修改item&#xA;del dict[&#39;p&#39;];                              ###&amp;lt; 删除item&#xA;len(dict);                                  ###&amp;lt; item个数&#xA;keys = dict.keys();&#xA;vals = dict.values();&#xA;xxx = dict.get(&#39;a&#39;, &amp;quot;a_default_val&amp;quot;);       ###&amp;lt; 查找&#39;a&#39;对应的val,没有则返回&amp;quot;a_default_val&amp;quot;&#xA;for key, val in dict.items():               ###&amp;lt; 遍历dict&#xA;    print &#39;Contact %s =&amp;gt; %s&#39; % (key, val);&#xA;if &#39;j&#39; in dict:                             ###&amp;lt; 判断是否存在key&#xA;    print &amp;quot;j&#39;s val is %s&amp;quot; % dict[&#39;j&#39;];&#xA;if dict.has_key(&#39;j&#39;):                       ###&amp;lt; 判断是否存在key&#xA;    print &amp;quot;j&#39;s val is %s&amp;quot; % dict[&#39;j&#39;];&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;序列&lt;/h3&gt;&#xA;&#xA;&lt;h6&gt;列表,元组,字符串都是序列&lt;/h6&gt;&#xA;&#xA;&lt;h6&gt;序列的 索引操作符 &amp;amp; 切片操作符 (index &amp;amp; slicing)&lt;/h6&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;list = [&#39;apple&#39;, &#39;mango&#39;, &#39;banana&#39;, &#39;pan&#39;];&#xA;list[0];                    ###&amp;lt; 访问第一个item&#xA;list[-1];                   ###&amp;lt; 访问最后一个item&#xA;list[-2];                   ###&amp;lt; 访问倒数第二个item&#xA;list[1:2];                  ###&amp;lt; 切片 [1]&#xA;list[:3];                   ###&amp;lt; 从头到[2]&#xA;list[2:];                   ###&amp;lt; [2]到尾&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;参考&lt;/h3&gt;&#xA;&#xA;&lt;h6&gt;即变量名,指向对象存储的内存&lt;/h6&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;list = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;];&#xA;mylist1 = list;                 ###&amp;lt; 别名&#xA;mylist2 = list[:];              ###&amp;lt; 切片拷贝&#xA;del mylist1[0];                 ###&amp;lt; 会影响到list&#xA;del mylist2[0];                 ###&amp;lt; 不会影响到list&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;集合set&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;s = set(&#39;ab&#39;);                  ###&amp;lt; set([&#39;a&#39;, &#39;b&#39;])&#xA;len(s);&#xA;if &#39;a&#39; in s:&#xA;if &#39;c&#39; not in s:&#xA;if s.issubset(ss):              ###&amp;lt; 判断是否s为ss的子集&#xA;if s &amp;lt;= ss:                     ###&amp;lt; 判断是否s为ss的子集&#xA;if ss.issuperset(s):            ###&amp;lt; 判断是否ss为ss的超集&#xA;if ss &amp;gt;= s:                     ###&amp;lt; 判断是否ss为ss的超集&#xA;u = s.union(t);                 ###&amp;lt; 返回并集&#xA;u = s | t;                      ###&amp;lt; 返回并集&#xA;a = s.intersection(t);          ###&amp;lt; 返回交集&#xA;a = s &amp;amp; t;                      ###&amp;lt; 返回交集&#xA;s.difference(t);                ###&amp;lt; 返回s 中有但是 t 中没有的&#xA;s.symmetric_difference(t)       ###&amp;lt; 返回 s 和 t 中不重复的元素&#xA;s ^ t                           ###&amp;lt; 返回 s 和 t 中不重复的元素&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>vim的相关使用</title>
      <link>http://jphome.github.com/blog/2013/11/06/readme_vim.html</link>
      <pubDate>2013-11-06 10:58:35 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;摘录vim编辑器的使用&lt;/p&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;h3&gt;vim模式&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;nromal&lt;/li&gt;&#xA;&lt;li&gt;visual（选择）&lt;/li&gt;&#xA;&lt;li&gt;insert&lt;/li&gt;&#xA;&lt;li&gt;cmd-line/Ex&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;lsquo;:&amp;lsquo;进入cmd-line模式&lt;/li&gt;&#xA;&lt;li&gt;&amp;lsquo;Q&amp;rsquo;进入Ex模式（多cmd-line模式）&lt;/li&gt;&#xA;&lt;/ul&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3&gt;常规插件安装方法&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;下载插件包xxx.zip&#xA;解压zip： xxx.txt -&gt; ~/.vim/doc&#xA;xxx.vim -&gt; ~/.vim/plugin&#xA;进~/.vim/doc&#xA;:helptags .                 ###&lt; 把新的xxx.txt加入helptags&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;map命令相关：&lt;/h3&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;h4&gt;在设置map时按键名&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;&lt;C-a&gt;       Ctrl+a&#xA;&lt;A-a&gt;       Alt+a&#xA;&lt;C-A-a&gt;     Ctrl+Alt+a&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;map命令前缀&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;默认的map命令影响到normal和visual模式&#xA;nore        表示非递归&#xA;n           表示在普通模式下生效&#xA;v           表示在可视模式下生效&#xA;i           表示在插入模式下生效&#xA;c           表示在命令行模式下生效&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;非递归说明&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;:map a b&#xA;:map c a&#xA;对于c等效于&#xA;:map c b&#xA;:noremap c a                   ###&lt; 这种就指定了非递归map&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;清除map&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;:unmap c                       ###&lt; 删除映射&#xA;:mapclear                      ###&lt; 直接清除相关模式下的所有映射&#xA;&lt;/pre&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h3&gt;taglist.vim中使用的tags生成&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;ctags -R ./src              ###&lt; 生成tags&#xA;ctags -R *&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;保存当前的编辑状态&lt;/h3&gt;&#xA;&#xA;&lt;h6&gt;要恢复上次的编辑环境，需要保存session或viminfo&lt;/h6&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;h4&gt;使用Session&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;:mksession [file.vim]       ###&lt; 保存session,默认session文件名为Session.vim&#xA;:mksession!                 ###&lt; 已存在Session.vim的情况下&#xA;:source Session.vim         ###&lt; 恢复vim状态&#xA;vim -S Session.vim          ###&lt; 启动vim时回复session&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;使用viminfo&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&#xA;:wviminfo hsmart.viminfo    ###&lt; 保存viminfo&#xA;:rviminfo hsmart.viminfo    ###&lt; 读入保存的viminfo文件&#xA;&lt;/pre&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;h3&gt;设置编码格式&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;encoding:       vim内部使用的字符编码方式，包括viｍ的buffer、菜单文本、消息文本等&#xA;fileencoding:   vim中当前编辑的文件的字符编码方式，vim保存文件时也会将文件保存为这种编码方式&#xA;fileencodings:  vim启动时会按照它所列出的字符编码方式逐一探测即将打开的文件的字符编码方式，并且将fileencoding设置为最终探测到的字符编码方式。因此最好将unicode编码方式放到这个列表的最前面，将拉丁语系编码方式latin1放到最后面&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;函数&lt;/h3&gt;&#xA;&#xA;&lt;h6&gt;内部调用还是得声明在先&lt;/h6&gt;&#xA;&#xA;&lt;pre&gt;&#xA;:call test()&#xA;&#xA;func! test()&#xA;endfunc&#xA;&#xA;func test()&#xA;endfunc&#xA;&#xA;function! Test()&#xA;  if&#xA;  else&#xA;  endif&#xA;endfunction&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;插件管理vundle&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle&#xA;:BundleInstall&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;杂项&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;Ctrl+z/:suspend                ###&lt; 在shell下是挂起vim; gui下是最小化窗口&#xA;:!{command}                    ###&lt; 执行shell命令&#xA;:shell                         ###&lt; 开一个新的shell&#xA;:!time {command}               ###&lt; 跑完显示运行时间&#xA;:r !date                       ###&lt; 将shell执行结果读到正在编辑的文件&#xA;:1,4!sort                      ###&lt; 将几行排序&#xA;:set fileencoding              ###&lt; 查看变量&#xA;:verbose map &lt;C-A&gt;             ###&lt; 获取C-A快捷键的绑定内容&#xA;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>ubuntu12.04安装PPStream</title>
      <link>http://jphome.github.com/blog/2013/10/27/install_ppstream.html</link>
      <pubDate>2013-10-27 05:58:45 +0800</pubDate>
      <description>&lt;h3&gt;简介:&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;摘自about: PPS网络电视是一款基于P2P技术的流媒体直播软件,能够为宽带用户提供稳定和流畅的视频直播节目。PPS网络电视采用P2P-Streaming技术的流媒体直播&lt;/p&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;h3&gt;1.安装qt4依赖包&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install libqt4-core libqt4-gui libqt4-webkit&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;2.&lt;a href=&#34;http://dawndiy.com/archives/52/&#34;&gt;解决Ubuntu12.04下PPStream一直缓冲后跳到下一个问题&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install libjpeg62&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;3.下载安装包&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;wget http://download.ppstream.com/linux/PPStream.deb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;4.安装PPStream&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;sudo dpkg -i PPStream.deb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>cut工具的使用方法</title>
      <link>http://jphome.github.com/blog/2013/10/23/cut.html</link>
      <pubDate>2013-10-23 10:12:30 +0800</pubDate>
      <description>&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;cut作用:用来裁剪数据&#34; href=&#34;#cut作用:用来裁剪数据&#34;&gt;&lt;/a&gt;cut作用:用来裁剪数据&lt;/h2&gt;&#xA;&#xA;&lt;h4&gt;参数&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;-b      字节(bytes)&#xA;-c      字符(characters)&#xA;-f      域(fields)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;1.-按字节(bytes)&#34; href=&#34;#1.-按字节(bytes)&#34;&gt;&lt;/a&gt;1. 按字节(bytes)&lt;/h2&gt;&#xA;&#xA;&lt;h4&gt;一个汉字算3个字节&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;date | cut -b 1-4           ###&amp;lt; 取前4B&#xA;date | cut -b 1-4,10        ###&amp;lt; 取前4B和第10个B&#xA;date | cut -b -4            ###&amp;lt; 取1-4B&#xA;date | cut -b 4-            ###&amp;lt; 取第4个B到行尾&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;2.-按字符(characters)&#34; href=&#34;#2.-按字符(characters)&#34;&gt;&lt;/a&gt;2. 按字符(characters)&lt;/h2&gt;&#xA;&#xA;&lt;h4&gt;中文字符和空格都算一个字符&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;date | cut -c 1-5&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h2&gt;&lt;a style=&#34;display: block;&#34; name=&#34;3.-按域(fields)&#34; href=&#34;#3.-按域(fields)&#34;&gt;&lt;/a&gt;3. 按域(fields)&lt;/h2&gt;&#xA;&#xA;&lt;h4&gt;-d 指定域分隔符(默认为Tab)&lt;/h4&gt;&#xA;&#xA;&lt;h4&gt;-f 指定要剪出哪几个域[1, 2, 3, 4&amp;hellip;]&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;head -n5 /etc/passwd | cut -d: -f1,3-5      ###&amp;lt; 对passwd文件的前5行进行裁剪&#xA;cut -d&amp;quot;:&amp;quot; -f2                               ###&amp;lt; 空格表示&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>readme_python</title>
      <link>http://jphome.github.com/blog/2013/10/16/readme_python.html</link>
      <pubDate>2013-10-16 11:24:31 +0800</pubDate>
      <description>&lt;h3&gt;python模块Package Index:&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://pypi.python.org/pypi&#34;&gt;https://pypi.python.org/pypi&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;从源码安装python模块&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;python setup.py build&#xA;sudo python setup.py install&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;python第三方模块管理工具:pip&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;安装:&lt;/h4&gt;&#xA;&#xA;&lt;h5&gt;首先安装setuptools&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;wget http://pypi.python.org/packages/source/s/setuptools/setuptools-0.6c11.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h5&gt;安装pip&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;wget https://pypi.python.org/packages/source/p/pip/pip-1.4.1.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;使用pip:&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;安装第三方模块&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;pip install xxx&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;升级模块&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;pip install --upgrade xxx&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;移除模块&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;pip uninstall xxx&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;&lt;a href=&#34;http://www.lupaworld.com/article-229520-1.html&#34;&gt;性能评估&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;粗粒度的计算时间&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;time python xxx.py&#xA;    real:       实际花费的时间&#xA;    user:       cpu花费在内核外的时间&#xA;    sys:        cpu花费在内核内的时间&#xA;    user+sys: cpu在程序上花费的时间&#xA;如果user+sys&amp;lt;&amp;lt;real,则程序的大部分性能瓶颈在IO等待上&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;模块&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;PYTHONPATH包含模块所在路径&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;package&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;包就是模块所在的路径&lt;br \&gt;&lt;/p&gt;&#xA;&#xA;&lt;h4&gt;比如有两个模块 color.py shape.py&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;PYTHONPATH=.:$(PYTHONPATH)&#xA;./draw/__init__.py&#xA;./draw/color.py&#xA;./draw/shape.py&#xA;&#xA;import draw;            ###&amp;lt; __init__.py生效,coloe/shape不可用&#xA;import draw.color;      ###&amp;lt; color可用,但得用全名:draw.color&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>git</title>
      <link>http://jphome.github.com/blog/2013/10/16/readme_git.html</link>
      <pubDate>2013-10-16 09:37:03 +0800</pubDate>
      <description>&lt;h3&gt;1. 安装&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;sudo apt-get install git git-core&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;2. 配置 设置你的名字和email(提交commit时的签名)&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;git config --global user.name &#34;jphome&#34;&#xA;git config --global user.email &#34;jphome98@gmail.com&#34;&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;执行了上面的命令后,会在你的主目录(home directory)建立一个叫 ~/.gitconfig 的文件&lt;/h4&gt;&#xA;&#xA;&lt;h5&gt;内容一般像下面这样:&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&#xA;[user]&#xA;    name = jphome&#xA;    email = jphome98@gmail.com&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;注:这样的设置是全局设置,会影响此用户建立的每个项目.&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;3. git命令&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;git clone https://github.com/jphome/hSmart.git&#xA;git add *&#xA;git commit&#xA;git remote add origin https://github.com/jphome/hSmart.git&#xA;git push -u origin master&#xA;&#xA;&#xA;本地编辑前&#xA;git pull&#xA;如果有冲突就会提示 处理冲突&#xA;然后 git ci -a&#xA;然后 git push 同步github上的数据&#xA;&#xA;&#xA;编辑完了后&#xA;git ci -a&#xA;git push&#xA;&#xA;&#xA;当本地与远程冲突时&#xA;git fetch origin            ###&lt; 获取冲突&#xA;git merge origin            ###&lt; 如果merge失败 手动编辑修改&#xA;git ci -a&#xA;git add *&#xA;git push&#xA;&#xA;&#xA;git init&#xA;git add file1 file2 file3   ###&lt; 将更新的内容（修改 &amp; 新增）添加到索引中&#xA;&#xA;git commit -a               ###&lt; 自动把所有内容被修改的文件(不包括新创建的文件)都添加到索引中,并且同时把它们提交&#xA;git diff --cached           ###&lt; 查看哪些文件将被提交（commit）&#xA;git diff                    ###&lt; 查看当前你所有已做的但没有加入到索引里的修改&#xA;git diff HEAD               ###&lt; 显示你工作目录与上次提交时之间的所有差别&#xA;git commit                  ###&lt; 提交到本地&#xA;&#xA;&#xA;git push                    ###&lt; 推到网上仓库&#xA;git pull                    ###&lt; 从远程仓库down更新 = git fetch + git merge&#xA;                                ###&lt; 当本地与远程都编辑了 git pull就会失败&#xA;&#xA;&#xA;git branch experimental     ###&lt; 新建分支&#xA;git branch                  ###&lt; 查看所有分支（*为当前所处分支）&#xA;git checkout experimental   ###&lt; 切换分支&#xA;git merge experimental      ###&lt; 合并分支experimental到当前分支&#xA;git branch -d experimental  ###&lt; 删除分支experimental&#xA;gitk                        ###&lt; 图形界面显示项目历史&#xA;git reset --hard HEAD       ###&lt; 回到合并之前的状态&#xA;git diff master..test       ###&lt; 显示两个分支间的差异&#xA;git diff master...test      ###&lt; 显示‘master’,‘test’的共有 父分支和&#39;test&#39;分支之间的差异&#xA;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;4. 下载git仓库的文件&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&#xA;wget --no-check-certificate https://raw.githubusercontent.com/jphome/WRT_package/master/helloworld/src/helloworld.c&#xA;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>树莓派USB无线网卡配置</title>
      <link>http://jphome.github.com/blog/2013/10/15/config_wifi.html</link>
      <pubDate>2013-10-15 09:03:24 +0800</pubDate>
      <description>&lt;h3&gt;说明&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;配置树莓派wifi，开机连上路由器&lt;/p&gt;&#xA;&#xA;&lt;p&gt;参考: &lt;a href=&#34;http://www.2fz1.com/?p=353&#34;&gt;http://www.2fz1.com/?p=353&lt;/a&gt;&#xA;&lt;hr/&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;购置无线网卡&#xA;手头本来有一个RT3070,可是怎么都搞不定&#xA;后淘了个&lt;a href=&#34;http://detail.tmall.com/item.htm?id=14795585956&#34;&gt;EDUP的EP-N8508GS&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;1.查看插入的无线网卡驱动有没有加载&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;lsusb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;我的显示如下无线网卡信息&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Bus 001 Device 004: ID 0bda:8176 Realtek Semiconductor Corp. RTL8188CUS 802.11n WLAN Adapter&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;2.配置网卡配置文件&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;cd /etc/network&#xA;cp interfaces interfaces.bak&#xA;sudo vi interfaces &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;内容如下&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;auto lo&#xA;iface lo inet loopback&#xA;iface eth0 inet dhcp&#xA;&#xA;auto wlan0&#xA;allow-hotplug wlan0&#xA;iface wlan0 inet dhcp&#xA;wpa-ssid &amp;quot;SSID&amp;quot;&#xA;wpa-psk &amp;quot;PASSWORD&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;3.配置路由器为树莓派静态分配ip&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;br \&gt;&lt;/p&gt;&#xA;&#xA;&lt;h5&gt;存在的问题: 网卡插入后设备自动重启,略讨厌,不过总归有网上了&lt;/h5&gt;&#xA;</description>
    </item>
    <item>
      <title>配置blog环境</title>
      <link>http://jphome.github.com/blog/2013/10/14/config_blog.html</link>
      <pubDate>2013-10-14 09:54:42 +0800</pubDate>
      <description>&lt;h3&gt;配置vim(~/.vimrc)&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;自动添加mkd文件头&lt;/h4&gt;&#xA;&#xA;&lt;h5&gt;1.新建文件(vim xxx.md)&lt;/h5&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;autocmd BufNewFile *.md exec &amp;quot;:call SetTitle()&amp;quot;&#xA;func! SetTitle()&#xA;    if &amp;amp;filetype == &#39;mkd&#39;&#xA;        call setline(1,&amp;quot;---&amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;), &amp;quot;title: &amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+1, &amp;quot;date: &#39;&amp;quot;.strftime(&amp;quot;%Y-%m-%d %H:%M:%S&amp;quot;).&amp;quot;&#39;&amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+2, &amp;quot;permalink: &amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+3, &amp;quot;description: &amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+4, &amp;quot;categories: &amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+5, &amp;quot;- &amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+6, &amp;quot;- &amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+7, &amp;quot;&amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+8, &amp;quot;tags: &amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+9, &amp;quot;- &amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+10, &amp;quot;---&amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+11, &amp;quot;&amp;quot;)&#xA;        call append(line(&amp;quot;.&amp;quot;)+12, &amp;quot;&amp;quot;)&#xA;    endif&#xA;endfunc&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h4&gt;2.更新已有文件(xxx -&amp;gt; xxx.md)&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;map &amp;lt;F5&amp;gt; :call AddAutoHead()&amp;lt;CR&amp;gt;&#xA;func! AddAutoHead()&#xA;    exec &amp;quot;w&amp;quot;&#xA;    if &amp;amp;filetype == &#39;mkd&#39;&#xA;        call append(0, &amp;quot;---&amp;quot;)&#xA;        call append(1, &amp;quot;title: &amp;quot;)&#xA;        call append(2, &amp;quot;date: &#39;&amp;quot;.strftime(&amp;quot;%Y-%m-%d %H:%M:%S&amp;quot;).&amp;quot;&#39;&amp;quot;)&#xA;        call append(3, &amp;quot;permalink: &amp;quot;)&#xA;        call append(4, &amp;quot;description: &amp;quot;)&#xA;        call append(5, &amp;quot;categories: &amp;quot;)&#xA;        call append(6, &amp;quot;- &amp;quot;)&#xA;        call append(7, &amp;quot;- &amp;quot;)&#xA;        call append(8, &amp;quot;&amp;quot;)&#xA;        call append(9, &amp;quot;tags:&amp;quot;)&#xA;        call append(10, &amp;quot;- &amp;quot;)&#xA;        call append(11, &amp;quot;---&amp;quot;)&#xA;        call append(12, &amp;quot;&amp;quot;)&#xA;        call append(13, &amp;quot;&amp;quot;)&#xA;        endif&#xA;endfunc&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;自动更新当前编辑文件至blog(本地) [按Ctrl+F5]&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;quot; 需要事先设置blog_root环境变量&#xA;map &amp;lt;C-F5&amp;gt; :call RunXxx()&amp;lt;CR&amp;gt;&#xA;func! RunXxx()&#xA;    exec &amp;quot;w&amp;quot;&#xA;    if &amp;amp;filetype == &#39;mkd&#39;&#xA;        exec &amp;quot;!cp % $blog_root/posts&amp;quot;&#xA;        exec &amp;quot;!cd $blog_root &amp;amp;&amp;amp; gor compile&amp;quot;&#xA;    endif&#xA;endfunc&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
    <item>
      <title>学习markdown语言语法</title>
      <link>http://jphome.github.com/blog/2013/10/13/syntax_markdown.html</link>
      <pubDate>2013-10-13 10:45:44 +0800</pubDate>
      <description>&lt;p&gt;From: &lt;a href=&#34;http://wowubuntu.com/markdown/basic.html&#34;&gt;basic&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;回车&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;br /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;标题(两种语法)&lt;/h3&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;em&gt;Setext&lt;/em&gt;: 底线形式 === 或 &amp;mdash;&lt;/li&gt;&#xA;&lt;li&gt;&lt;em&gt;atx&lt;/em&gt;: 在行首插入 1 到 6 个 #&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;h3&gt;修辞和强调&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;*emphasized*        ###&amp;lt; 斜体&#xA;_emphasized_        ###&amp;lt; 斜体&#xA;**strong**          ###&amp;lt; strong&#xA;__strong__          ###&amp;lt; strong&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;行内代码&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;使用反引号&#39;`&#39;包裹起来&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;列表(* + - num)&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;* 1                 ###&amp;lt; 无序列表&#xA;* 2&#xA;* 3&#xA;&#xA;+ 1                 ###&amp;lt; 无序列表&#xA;+ 2&#xA;+ 3&#xA;&#xA;- 1                 ###&amp;lt; 无序列表&#xA;- 2&#xA;- 3&#xA;&#xA;1. a                ###&amp;lt; 有序列表&#xA;2. a&#xA;3. a&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;文字链接&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;[xxx&#39;s blog](http://xxx.com &amp;quot;title&amp;quot;)    ###&amp;lt; 行内形式&#xA;&#xA;[xxx&#39;s blog][id]                        ###&amp;lt; 参考形式&#xA;[id]: http://url_1.com&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;图片链接&lt;/h3&gt;&#xA;&#xA;&lt;h4&gt;(打算在blog中使用yunio网盘的图片外链,尚未成功 - - 貌似不被支持了)&lt;/h4&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;![alt text](/path/to/img.jpg &amp;quot;title&amp;quot;)   ###&amp;lt; 行内形式&#xA;&#xA;![alt text][id]                         ###&amp;lt; 参考形式&#xA;[id]: /path/to/img.jpg &amp;quot;title&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;br /&gt;&#xA;&lt;br /&gt;&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;测试几张外链的图片&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;http://pic.baike.soso.com/p/20130304/bki-20130304161213-1881616484.jpg&#34; alt=&#34;yunio&#34; title=&#34;yunio&#34; /&gt;&#xA; Yunio网盘,竟然升级到1T了&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;http://forum.csdn.net/PointForum/ui/scripts/csdn/Plugin/003/monkey/1.gif&#34; alt=&#34;hehe&#34; /&gt;&#xA;&#xA;&lt;img src=&#34;http://forum.csdn.net/PointForum/ui/scripts/csdn/Plugin/003/monkey/2.gif&#34; alt=&#34;hehe&#34; /&gt;&#xA;&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>gor搭建个人博客(github静态博客)</title>
      <link>http://jphome.github.com/blog/2013/10/13/readme_blog_init.html</link>
      <pubDate>2013-10-13 10:20:45 +0800</pubDate>
      <description>&lt;h3&gt;简介:&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;以前习惯把积累的东西用readme文件的形式存在本地,方便查阅&#xA;现在打算整理成静态blog的形式,简单方便,走到哪儿都可以查阅&lt;/p&gt;&#xA;&#xA;&lt;hr /&gt;&#xA;&#xA;&lt;p&gt;静态博客 [&lt;a href=&#34;https://github.com/wendal/gor&#34;&gt;gor&lt;/a&gt; &amp;ndash; Golang编写]&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;安装gor&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;go get -u github.com/wendal/gor&#xA;go install github.com/wendal/gor/gor&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;新建站点 生成jphome98.com文件夹&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;gor new jphome98.com&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;新建单篇博客&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;cd jphome98.com&#xA;gor post &amp;quot;readme&amp;quot;           ###&amp;lt; 生成博客页 posts/readme.md&#xA;                            ###&amp;lt; 编辑 readme.md&#xA;                            ###&amp;lt; 当然也可以编辑好xxx.md直接放到 posts下&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;编译&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;gor compile                 ###&amp;lt; 生成的资源放在compiled文件夹&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;本地预览&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;gor http&#xA;浏览器输入localhost:8080&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;部署到github上   || e.g: &lt;a href=&#34;https://github.com/hugozhu/blog&#34;&gt;hugozhu&lt;/a&gt;&lt;/h3&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;在github上新建repo &amp;quot;jphome.github.com&amp;quot;&#xA;将compiled提交到此repo&#xA;即可通过http://jphome.github.com访问&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;h3&gt;基本配置&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;打开站点根目录下的site.yml文件&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;1. 填入title, 作者等信息&#xA;2. 填入邮箱等信息&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;打开站点根目录下的config.yml文件&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;1. 设置production_url为你的网站地址, 例如 http://wendal.net 最后面不需要加入/ 生成rss.xml等文件时会用到&#xA;2. summary_lines 首页的文章摘要的长度,按你喜欢的呗&#xA;3. latest 首页显示多少文章&#xA;4. imgs 部分为自动插入 &amp;lt;img&amp;gt; 相关的配置&#xA;    imgtag：要插入的  标签的基本格式，%s 部分会被自动替换为 urlperfix/post_name/img_file_name 的格式&#xA;    urlperfix： 图片地址前缀&#xA;    localdir：图片文件在博客内的本地存放目录&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;打开widgets目录, 可以看到基本的挂件,里面有config.yml配置文件&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;1. analytics 暂时只支持google analytics, 填入tracking_id&#xA;2. comments 暂时只支持disqus, 请填入short_name&#xA;3. google_prettify 代码高亮,一般不修改&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;</description>
    </item>
  </channel>
</rss>